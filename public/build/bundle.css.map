{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Clipboard.svelte",
    "BarLoader.svelte",
    "Chasing.svelte",
    "Circle.svelte",
    "Circle2.svelte",
    "Circle3.svelte",
    "Clock.svelte",
    "Diamonds.svelte",
    "DoubleBounce.svelte",
    "Firework.svelte",
    "GoogleSpin.svelte",
    "Jellyfish.svelte",
    "Jumper.svelte",
    "Moon.svelte",
    "Plane.svelte",
    "Pulse.svelte",
    "Rainbow.svelte",
    "RingLoader.svelte",
    "ScaleOut.svelte",
    "Shadow.svelte",
    "SpinLine.svelte",
    "Square.svelte",
    "Stretch.svelte",
    "SyncLoader.svelte",
    "Wave.svelte",
    "ActionsView.svelte",
    "ConstructionPalette.svelte",
    "ExpressionBrowser.svelte",
    "ExpressionConstructorWizard.svelte",
    "ExpressionIcon.svelte",
    "LinkWizard.svelte",
    "MainView.svelte",
    "Perspective.svelte",
    "PerspectiveGraph.svelte",
    "PerspectiveSettings.svelte",
    "PerspectiveShell.svelte",
    "PerspectiveWrapper.svelte",
    "PrologExpressionView.svelte",
    "ZoomRoot.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount, tick, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let text;\n\n  let textarea;\n\n  async function copy() {\n    textarea.select();\n    document.execCommand(\"Copy\");\n    await tick();\n    textarea.blur();\n    dispatch(\"copy\");\n  }\n</script>\n\n<style>\n  textarea {\n    left: 0;\n    bottom: 0;\n    margin: 0;\n    padding: 0;\n    opacity: 0;\n    width: 1px;\n    height: 1px;\n    border: none;\n    display: block;\n    position: absolute;\n  }\n</style>\n\n<slot {copy} />\n<textarea bind:this={textarea} value={text} />\n",
    "<script>;\r\nimport { calculateRgba, range } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"2.1s\";\r\nexport let size = \"60\";\r\nlet rgba;\r\n$: rgba = calculateRgba(color, 0.2);\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    height: calc(var(--size) / 15);\r\n    width: calc(var(--size) * 2);\r\n    background-color: var(--rgba);\r\n    position: relative;\r\n    overflow: hidden;\r\n    background-clip: padding-box;\r\n  }\r\n  .lines {\r\n    height: calc(var(--size) / 15);\r\n    background-color: var(--color);\r\n  }\r\n\r\n  .small-lines {\r\n    position: absolute;\r\n    overflow: hidden;\r\n    background-clip: padding-box;\r\n    display: block;\r\n    border-radius: 2px;\r\n    will-change: left, right;\r\n    animation-fill-mode: forwards;\r\n  }\r\n  .small-lines.\\31 {\r\n    animation: var(--duration) cubic-bezier(0.65, 0.815, 0.735, 0.395) 0s\r\n      infinite normal none running long;\r\n  }\r\n  .small-lines.\\32 {\r\n    animation: var(--duration) cubic-bezier(0.165, 0.84, 0.44, 1)\r\n      calc((var(--duration)+0.1) / 2) infinite normal none running short;\r\n  }\r\n\r\n  @keyframes long {\r\n    0% {\r\n      left: -35%;\r\n      right: 100%;\r\n    }\r\n    60% {\r\n      left: 100%;\r\n      right: -90%;\r\n    }\r\n    100% {\r\n      left: 100%;\r\n      right: -90%;\r\n    }\r\n  }\r\n  @keyframes short {\r\n    0% {\r\n      left: -200%;\r\n      right: 100%;\r\n    }\r\n    60% {\r\n      left: 107%;\r\n      right: -8%;\r\n    }\r\n    100% {\r\n      left: 107%;\r\n      right: -8%;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"wrapper\" style=\"--size: {size}{unit}; --rgba:{rgba}\">\r\n  {#each range(2, 1) as version}\r\n    <div\r\n      class=\"lines small-lines {version}\"\r\n      style=\"--color: {color}; --duration: {duration};\" />\r\n  {/each}\r\n</div>\r\n",
    "<script>;\r\nimport { durationUnitRegex, range } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"2s\";\r\nexport let size = \"60\";\r\nlet durationUnit = duration.match(durationUnitRegex)[0];\r\nlet durationNum = duration.replace(durationUnitRegex, \"\");\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .spinner {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    animation: rotate var(--duration) infinite linear;\r\n  }\r\n  .dot {\r\n    width: 60%;\r\n    height: 60%;\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    background-color: var(--color);\r\n    border-radius: 100%;\r\n    animation: bounce var(--duration) infinite ease-in-out;\r\n  }\r\n\r\n  @keyframes rotate {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes bounce {\r\n    0%,\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\">\r\n  <div class=\"spinner\">\r\n    {#each range(2, 0) as version}\r\n      <div\r\n        class=\"dot\"\r\n        style=\"animation-delay: {version === 1 ? `${durationNum / 2}${durationUnit}` : '0s'}; bottom: {version === 1 ? '0' : ''}; top: {version === 1 ? 'auto' : ''};\" />\r\n    {/each}\r\n  </div>\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"0.75s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  .circle {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    border-color: var(--color) transparent var(--color) var(--color);\r\n    border-width: calc(var(--size) / 15);\r\n    border-style: solid;\r\n    border-image: initial;\r\n    border-radius: 50%;\r\n    animation: var(--duration) linear 0s infinite normal none running rotate;\r\n  }\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: rotate(0);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"circle\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration}\" />\r\n",
    "<script>export let size = \"60\";\r\nexport let unit = \"px\";\r\nexport let colorOuter = \"#FF3E00\";\r\nexport let colorCenter = \"#40B3FF\";\r\nexport let colorInner = \"#676778\";\r\nexport let durationMultiplier = 1;\r\nexport let durationOuter = `${durationMultiplier * 2}s`;\r\nexport let durationInner = `${durationMultiplier * 1.5}s`;\r\nexport let durationCenter = `${durationMultiplier * 3}s`;\r\n</script>\r\n\r\n<style>\r\n  .circle {\r\n    width: var(--size);\r\n    height: var(--size);\r\n    box-sizing: border-box;\r\n    position: relative;\r\n    border: 3px solid transparent;\r\n    border-top-color: var(--colorOuter);\r\n    border-radius: 50%;\r\n    animation: circleSpin var(--durationOuter) linear infinite;\r\n  }\r\n  .circle:before,\r\n  .circle:after {\r\n    content: \"\";\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    border: 3px solid transparent;\r\n    border-radius: 50%;\r\n  }\r\n  .circle:after {\r\n    border-top-color: var(--colorInner);\r\n    top: 9px;\r\n    left: 9px;\r\n    right: 9px;\r\n    bottom: 9px;\r\n    animation: circleSpin var(--durationInner) linear infinite;\r\n  }\r\n  .circle:before {\r\n    border-top-color: var(--colorCenter);\r\n    top: 3px;\r\n    left: 3px;\r\n    right: 3px;\r\n    bottom: 3px;\r\n    animation: circleSpin var(--durationCenter) linear infinite;\r\n  }\r\n  @keyframes circleSpin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"circle\"\r\n  style=\"--size: {size}{unit}; --colorInner: {colorInner}; --colorCenter: {colorCenter}; --colorOuter: {colorOuter}; --durationInner: {durationInner}; --durationCenter: {durationCenter}; --durationOuter: {durationOuter};\" />\r\n",
    "<script>export let size = \"60\";\r\nexport let unit = \"px\";\r\nexport let ballTopLeft = \"#FF3E00\";\r\nexport let ballTopRight = \"#F8B334\";\r\nexport let ballBottomLeft = \"#40B3FF\";\r\nexport let ballBottomRight = \"#676778\";\r\nexport let duration = \"1.5s\";\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    width: var(--size);\r\n    height: var(--size);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    line-height: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  .inner {\r\n    transform: scale(calc(var(--floatSize) / 52));\r\n  }\r\n  .ball-container {\r\n    animation: ballTwo var(--duration) infinite;\r\n    width: 44px;\r\n    height: 44px;\r\n    flex-shrink: 0;\r\n    position: relative;\r\n  }\r\n  .single-ball {\r\n    width: 44px;\r\n    height: 44px;\r\n    position: absolute;\r\n  }\r\n  .ball {\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    animation: ballOne var(--duration) infinite ease;\r\n  }\r\n  .ball-top-left {\r\n    background-color: var(--ballTopLeftColor);\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n  .ball-top-right {\r\n    background-color: var(--ballTopRightColor);\r\n    top: 0;\r\n    left: 24px;\r\n  }\r\n  .ball-bottom-left {\r\n    background-color: var(--ballBottomLeftColor);\r\n    top: 24px;\r\n    left: 0;\r\n  }\r\n  .ball-bottom-right {\r\n    background-color: var(--ballBottomRightColor);\r\n    top: 24px;\r\n    left: 24px;\r\n  }\r\n  @keyframes ballOne {\r\n    0% {\r\n      position: absolute;\r\n    }\r\n    50% {\r\n      top: 12px;\r\n      left: 12px;\r\n      position: absolute;\r\n      opacity: 0.5;\r\n    }\r\n    100% {\r\n      position: absolute;\r\n    }\r\n  }\r\n  @keyframes ballTwo {\r\n    0% {\r\n      transform: rotate(0deg) scale(1);\r\n    }\r\n    50% {\r\n      transform: rotate(360deg) scale(1.3);\r\n    }\r\n    100% {\r\n      transform: rotate(720deg) scale(1);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --floatSize: {size}; --ballTopLeftColor: {ballTopLeft}; --ballTopRightColor: {ballTopRight}; --ballBottomLeftColor: {ballBottomLeft}; --ballBottomRightColor: {ballBottomRight}; --duration: {duration};\">\r\n  <div class=\"inner\">\r\n    <div class=\"ball-container\">\r\n      <div class=\"single-ball\">\r\n        <div class=\"ball ball-top-left\">&nbsp;</div>\r\n      </div>\r\n      <div class=\"contener_mixte\">\r\n        <div class=\"ball ball-top-right\">&nbsp;</div>\r\n      </div>\r\n      <div class=\"contener_mixte\">\r\n        <div class=\"ball ball-bottom-left\">&nbsp;</div>\r\n      </div>\r\n      <div class=\"contener_mixte\">\r\n        <div class=\"ball ball-bottom-right\">&nbsp;</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"8s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n    div {\r\n        position: relative;\r\n        width: var(--size);\r\n        height: var(--size);\r\n        background-color: transparent;\r\n        box-shadow: inset 0px 0px 0px 2px var(--color);\r\n        border-radius: 50%;\r\n    }\r\n    div::before,\r\n    div:after {\r\n        position: absolute;\r\n        content: \"\";\r\n        background-color: var(--color);\r\n    }\r\n    div:after {\r\n        width: calc(var(--size) / 2.4);\r\n        height: 2px;\r\n        top: calc(var(--size) / 2);\r\n        left: calc(var(--size) / 2);\r\n        transform-origin: 1px 1px;\r\n        animation: rotate calc(var(--duration) / 4) linear infinite;\r\n    }\r\n    div:before {\r\n        width: calc(var(--size) / 3);\r\n        height: 2px;\r\n        top: calc((var(--size) / 2));\r\n        left: calc((var(--size) / 2));\r\n        transform-origin: 1px 1px;\r\n        animation: rotate var(--duration) linear infinite;\r\n    }\r\n    @keyframes rotate {\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n</style>\r\n\r\n<div style=\"--size: {size}{unit}; --color:{color}; --duration:{duration}\" />\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1.5s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  span {\r\n    width: var(--size);\r\n    height: calc(var(--size) / 4);\r\n    position: relative;\r\n    display: block;\r\n  }\r\n  div {\r\n    width: calc(var(--size) / 4);\r\n    height: calc(var(--size) / 4);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    border-radius: 2px;\r\n    background: var(--color);\r\n    transform: translateX(-50%) rotate(45deg) scale(0);\r\n    animation: diamonds var(--duration) linear infinite;\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: calc(var(--duration) * 2 / 3 * -1);\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: calc(var(--duration) * 2 / 3 * -2);\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: calc(var(--duration) * 2 / 3 * -3);\r\n  }\r\n\r\n  @keyframes diamonds {\r\n    50% {\r\n      left: 50%;\r\n      transform: translateX(-50%) rotate(45deg) scale(1);\r\n    }\r\n    100% {\r\n      left: 100%;\r\n      transform: translateX(-50%) rotate(45deg) scale(0);\r\n    }\r\n  }\r\n</style>\r\n\r\n<span style=\"--size: {size}{unit}; --color:{color}; --duration: {duration};\">\r\n  <div />\r\n  <div />\r\n  <div />\r\n</span>\r\n",
    "<script>;\r\nimport { range, durationUnitRegex } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"2.1s\";\r\nexport let size = \"60\";\r\nlet durationUnit = duration.match(durationUnitRegex)[0];\r\nlet durationNum = duration.replace(durationUnitRegex, \"\");\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    position: relative;\r\n    width: var(--size);\r\n    height: var(--size);\r\n  }\r\n  .circle {\r\n    position: absolute;\r\n    width: var(--size);\r\n    height: var(--size);\r\n    background-color: var(--color);\r\n    border-radius: 100%;\r\n    opacity: 0.6;\r\n    top: 0;\r\n    left: 0;\r\n    animation-fill-mode: both;\r\n    animation-name: bounce !important;\r\n  }\r\n  @keyframes bounce {\r\n    0%,\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"wrapper\" style=\"--size: {size}{unit}; --color: {color}\">\r\n  {#each range(2, 1) as version}\r\n    <div\r\n      class=\"circle\"\r\n      style=\"animation: {duration} {version === 1 ? `${(durationNum - 0.1) / 2}${durationUnit}` : `0s`} infinite ease-in-out\" />\r\n  {/each}\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1.25s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    width: calc(var(--size) * 1.3);\r\n    height: calc(var(--size) * 1.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .firework {\r\n    border: calc(var(--size) / 10) dotted var(--color);\r\n    width: var(--size);\r\n    height: var(--size);\r\n    border-radius: 50%;\r\n    animation: fire var(--duration) cubic-bezier(0.165, 0.84, 0.44, 1) infinite;\r\n  }\r\n\r\n  @keyframes fire {\r\n    0% {\r\n      opacity: 1;\r\n      transform: scale(0.1);\r\n    }\r\n    25% {\r\n      opacity: 0.85;\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n      opacity: 0;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\">\r\n  <div class=\"firework\" />\r\n</div>\r\n",
    "<script>\r\n  export let size = \"40px\";\r\n  export let duration = \"3s\";\r\n  $: styles = [`width: ${size}`, `height: ${size}`].join(\";\");\r\n</script>\r\n\r\n<div class=\"spinner spinner--google\" style=\"--duration: {duration}; {styles}\"></div>\r\n\r\n<style>\r\n  * {\r\n    overflow: hidden;\r\n    position: relative;\r\n    text-indent: -9999px;\r\n    display: inline-block;\r\n    background: #f86;\r\n    border-radius: 50%;\r\n    transform: rotateZ(90deg);\r\n    transform-origin: 50% 50%;\r\n    animation: plus-loader-background var(--duration) infinite ease-in-out;\r\n  }\r\n\r\n  *:after {\r\n    background: #f86;\r\n    border-radius: 50% 0 0 50%;\r\n    content: \"\";\r\n    position: absolute;\r\n    right: 50%;\r\n    top: 0;\r\n    width: 50%;\r\n    height: 100%;\r\n    transform-origin: 100% 50%;\r\n    animation: plus-loader-top var(--duration) infinite linear;\r\n  }\r\n\r\n  *:before {\r\n    background: #fc6;\r\n    border-radius: 50% 0 0 50%;\r\n    content: \"\";\r\n    position: absolute;\r\n    right: 50%;\r\n    top: 0;\r\n    width: 50%;\r\n    height: 100%;\r\n    transform-origin: 100% 50%;\r\n    animation: plus-loader-bottom var(--duration) infinite linear;\r\n  }\r\n\r\n  @keyframes plus-loader-top {\r\n    2.5% {\r\n      background: #f86;\r\n      transform: rotateY(0deg);\r\n      animation-timing-function: ease-in;\r\n    }\r\n\r\n    13.75% {\r\n      background: #ff430d;\r\n      transform: rotateY(90deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    13.76% {\r\n      background: #ffae0d;\r\n      transform: rotateY(90deg);\r\n      animation-timing-function: ease-out;\r\n    }\r\n\r\n    25% {\r\n      background: #fc6;\r\n      transform: rotateY(180deg);\r\n    }\r\n\r\n    27.5% {\r\n      background: #fc6;\r\n      transform: rotateY(180deg);\r\n      animation-timing-function: ease-in;\r\n    }\r\n\r\n    41.25% {\r\n      background: #ffae0d;\r\n      transform: rotateY(90deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    41.26% {\r\n      background: #2cc642;\r\n      transform: rotateY(90deg);\r\n      animation-timing-function: ease-out;\r\n    }\r\n\r\n    50% {\r\n      background: #6d7;\r\n      transform: rotateY(0deg);\r\n    }\r\n\r\n    52.5% {\r\n      background: #6d7;\r\n      transform: rotateY(0deg);\r\n      animation-timing-function: ease-in;\r\n    }\r\n\r\n    63.75% {\r\n      background: #2cc642;\r\n      transform: rotateY(90deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    63.76% {\r\n      background: #1386d2;\r\n      transform: rotateY(90deg);\r\n      animation-timing-function: ease-out;\r\n    }\r\n\r\n    75% {\r\n      background: #4ae;\r\n      transform: rotateY(180deg);\r\n    }\r\n\r\n    77.5% {\r\n      background: #4ae;\r\n      transform: rotateY(180deg);\r\n      animation-timing-function: ease-in;\r\n    }\r\n\r\n    91.25% {\r\n      background: #1386d2;\r\n      transform: rotateY(90deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    91.26% {\r\n      background: #ff430d;\r\n      transform: rotateY(90deg);\r\n      animation-timing-function: ease-in;\r\n    }\r\n\r\n    100% {\r\n      background: #f86;\r\n      transform: rotateY(0deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n  }\r\n\r\n  @keyframes plus-loader-bottom {\r\n    0% {\r\n      background: #fc6;\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    50% {\r\n      background: #fc6;\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    75% {\r\n      background: #4ae;\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    100% {\r\n      background: #4ae;\r\n      animation-timing-function: step-start;\r\n    }\r\n  }\r\n\r\n  @keyframes plus-loader-background {\r\n    0% {\r\n      background: #f86;\r\n      transform: rotateZ(180deg);\r\n    }\r\n\r\n    25% {\r\n      background: #f86;\r\n      transform: rotateZ(180deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    27.5% {\r\n      background: #6d7;\r\n      transform: rotateZ(90deg);\r\n    }\r\n\r\n    50% {\r\n      background: #6d7;\r\n      transform: rotateZ(90deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    52.5% {\r\n      background: #6d7;\r\n      transform: rotateZ(0deg);\r\n    }\r\n\r\n    75% {\r\n      background: #6d7;\r\n      transform: rotateZ(0deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n\r\n    77.5% {\r\n      background: #f86;\r\n      transform: rotateZ(270deg);\r\n    }\r\n\r\n    100% {\r\n      background: #f86;\r\n      transform: rotateZ(270deg);\r\n      animation-timing-function: step-start;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script>;\r\nimport { range, durationUnitRegex } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"2.5s\";\r\nexport let size = \"60\";\r\nlet durationUnit = duration.match(durationUnitRegex)[0];\r\nlet durationNum = duration.replace(durationUnitRegex, \"\");\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: var(--size);\r\n    height: var(--size);\r\n  }\r\n  .ring {\r\n    position: absolute;\r\n    border: 2px solid var(--color);\r\n    border-radius: 50%;\r\n    background-color: transparent;\r\n    animation: motion var(--duration) ease infinite;\r\n  }\r\n  @keyframes motion {\r\n    0% {\r\n      transform: translateY(var(--motionOne));\r\n    }\r\n    50% {\r\n      transform: translateY(var(--motionTwo));\r\n    }\r\n    100% {\r\n      transform: translateY(var(--motionThree));\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --motionOne: {-size / 5}{unit}; --motionTwo: {+size / 4}{unit}; --motionThree: {-size / 5}{unit}; --duration: {duration};\">\r\n  {#each range(6, 0) as version}\r\n    <div\r\n      class=\"ring\"\r\n      style=\"animation-delay: {version * (durationNum / 25)}{durationUnit}; width: {version * (+size / 6) + unit}; height: {(version * (+size / 6)) / 2 + unit}; \" />\r\n  {/each}\r\n</div>\r\n",
    "<script>;\r\nimport { range, durationUnitRegex } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1s\";\r\nexport let size = \"60\";\r\nlet durationUnit = duration.match(durationUnitRegex)[0];\r\nlet durationNum = duration.replace(durationUnitRegex, \"\");\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    width: var(--size);\r\n    height: var(--size);\r\n  }\r\n  .circle {\r\n    border-radius: 100%;\r\n    animation-fill-mode: both;\r\n    position: absolute;\r\n    opacity: 0;\r\n    width: var(--size);\r\n    height: var(--size);\r\n    background-color: var(--color);\r\n    animation: bounce var(--duration) linear infinite;\r\n  }\r\n  @keyframes bounce {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0);\r\n    }\r\n    5% {\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\">\r\n  {#each range(3, 1) as version}\r\n    <div\r\n      class=\"circle\"\r\n      style=\"animation-delay: {(durationNum / 3) * (version - 1) + durationUnit};\" />\r\n  {/each}\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"0.6s\";\r\nexport let size = \"60\";\r\nlet moonSize = +size / 7;\r\nlet top = +size / 2 - moonSize / 2;\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    border-radius: 100%;\r\n    animation: moonStretchDelay var(--duration) 0s infinite linear;\r\n    animation-fill-mode: forwards;\r\n    position: relative;\r\n  }\r\n  .circle-one {\r\n    top: var(--moonSize);\r\n    background-color: var(--color);\r\n    width: calc(var(--size) / 7);\r\n    height: calc(var(--size) / 7);\r\n    border-radius: 100%;\r\n    animation: moonStretchDelay var(--duration) 0s infinite linear;\r\n    animation-fill-mode: forwards;\r\n    opacity: 0.8;\r\n    position: absolute;\r\n  }\r\n  .circle-two {\r\n    opacity: 0.1;\r\n    border: calc(var(--size) / 7) solid var(--color);\r\n    height: var(--size);\r\n    width: var(--size);\r\n    border-radius: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n  @keyframes moonStretchDelay {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --moonSize: {top}{unit}; --duration: {duration};\">\r\n  <div class=\"circle-one\" />\r\n  <div class=\"circle-two\" />\r\n</div>\r\n",
    "<script>;\r\nimport { calculateRgba } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1.3s\";\r\nexport let size = \"60\";\r\nlet rgba;\r\n$: rgba = calculateRgba(color, 0.6);\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .wrapper * {\r\n    line-height: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  .spinner-inner {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    transform: scale(calc(var(--size) / 70));\r\n  }\r\n\r\n  .mask {\r\n    position: absolute;\r\n    border-radius: 2px;\r\n    overflow: hidden;\r\n    perspective: 1000;\r\n    backface-visibility: hidden;\r\n  }\r\n\r\n  .plane {\r\n    background: var(--color);\r\n    width: 400%;\r\n    height: 100%;\r\n    position: absolute;\r\n    z-index: 100;\r\n    perspective: 1000;\r\n    backface-visibility: hidden;\r\n  }\r\n\r\n  #top .plane {\r\n    z-index: 2000;\r\n    animation: trans1 var(--duration) ease-in infinite 0s backwards;\r\n  }\r\n  #middle .plane {\r\n    transform: translate3d(0px, 0, 0);\r\n    background: var(--rgba);\r\n    animation: trans2 var(--duration) linear infinite calc(var(--duration) / 4)\r\n      backwards;\r\n  }\r\n  #bottom .plane {\r\n    z-index: 2000;\r\n    animation: trans3 var(--duration) ease-out infinite\r\n      calc(var(--duration) / 2) backwards;\r\n  }\r\n  #top {\r\n    width: 53px;\r\n    height: 20px;\r\n    left: 20px;\r\n    top: 5px;\r\n    transform: skew(-15deg, 0);\r\n    z-index: 100;\r\n  }\r\n  #middle {\r\n    width: 33px;\r\n    height: 20px;\r\n    left: 20px;\r\n    top: 21px;\r\n    transform: skew(-15deg, 40deg);\r\n  }\r\n  #bottom {\r\n    width: 53px;\r\n    height: 20px;\r\n    top: 35px;\r\n    transform: skew(-15deg, 0);\r\n  }\r\n\r\n  @keyframes trans1 {\r\n    from {\r\n      transform: translate3d(53px, 0, 0);\r\n    }\r\n    to {\r\n      transform: translate3d(-250px, 0, 0);\r\n    }\r\n  }\r\n  @keyframes trans2 {\r\n    from {\r\n      transform: translate3d(-160px, 0, 0);\r\n    }\r\n    to {\r\n      transform: translate3d(53px, 0, 0);\r\n    }\r\n  }\r\n  @keyframes trans3 {\r\n    from {\r\n      transform: translate3d(53px, 0, 0);\r\n    }\r\n    to {\r\n      transform: translate3d(-220px, 0, 0);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --rgba: {rgba}; --duration: {duration};\">\r\n  <div class=\"spinner-inner\">\r\n    <div id=\"top\" class=\"mask\">\r\n      <div class=\"plane\" />\r\n    </div>\r\n    <div id=\"middle\" class=\"mask\">\r\n      <div class=\"plane\" />\r\n    </div>\r\n    <div id=\"bottom\" class=\"mask\">\r\n      <div class=\"plane\" />\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "<script>;\r\nimport { range, durationUnitRegex } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1.5s\";\r\nexport let size = \"60\";\r\nlet durationUnit = duration.match(durationUnitRegex)[0];\r\nlet durationNum = duration.replace(durationUnitRegex, \"\");\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: var(--size);\r\n    height: calc(var(--size) / 2.5);\r\n  }\r\n  .cube {\r\n    position: absolute;\r\n    top: 0px;\r\n    width: calc(var(--size) / 5);\r\n    height: calc(var(--size) / 2.5);\r\n    background-color: var(--color);\r\n    animation: motion var(--duration) cubic-bezier(0.895, 0.03, 0.685, 0.22)\r\n      infinite;\r\n  }\r\n  @keyframes motion {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n    50% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration}\">\r\n  {#each range(3, 0) as version}\r\n    <div\r\n      class=\"cube\"\r\n      style=\"animation-delay: {version * (+durationNum / 10)}{durationUnit}; left: {version * (+size / 3 + +size / 15) + unit};\" />\r\n  {/each}\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"3s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    width: var(--size);\r\n    height: calc(var(--size) / 2);\r\n    overflow: hidden;\r\n  }\r\n  .rainbow {\r\n    width: var(--size);\r\n    height: var(--size);\r\n    border-left-color: transparent;\r\n    border-bottom-color: transparent;\r\n    border-top-color: var(--color);\r\n    border-right-color: var(--color);\r\n    box-sizing: border-box;\r\n    transform: rotate(-200deg);\r\n    border-radius: 50%;\r\n    border-style: solid;\r\n    animation: var(--duration) ease-in-out 0s infinite normal none running\r\n      rotate;\r\n  }\r\n  @keyframes rotate {\r\n    0% {\r\n      border-width: 10px;\r\n    }\r\n    25% {\r\n      border-width: 3px;\r\n    }\r\n    50% {\r\n      transform: rotate(115deg);\r\n      border-width: 10px;\r\n    }\r\n    75% {\r\n      border-width: 3px;\r\n    }\r\n    100% {\r\n      border-width: 10px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\">\r\n  <div class=\"rainbow\" />\r\n</div>\r\n",
    "<script>;\r\nimport { range } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"2s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    position: relative;\r\n    width: var(--size);\r\n    height: var(--size);\r\n  }\r\n  .border {\r\n    border-color: var(--color);\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: var(--size);\r\n    height: var(--size);\r\n    opacity: 0.4;\r\n    perspective: 800px;\r\n    border-width: 6px;\r\n    border-style: solid;\r\n    border-image: initial;\r\n    border-radius: 100%;\r\n  }\r\n  .border.\\31 {\r\n    animation: var(--duration) linear 0s infinite normal none running ringOne;\r\n  }\r\n  .border.\\32 {\r\n    animation: var(--duration) linear 0s infinite normal none running ringTwo;\r\n  }\r\n\r\n  @keyframes ringOne {\r\n    0% {\r\n      transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);\r\n    }\r\n    100% {\r\n      transform: rotateX(360deg) rotateY(180deg) rotateZ(360deg);\r\n    }\r\n  }\r\n  @keyframes ringTwo {\r\n    0% {\r\n      transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);\r\n    }\r\n    100% {\r\n      transform: rotateX(180deg) rotateY(360deg) rotateZ(360deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\">\r\n  {#each range(2, 1) as version}\r\n    <div class=\"border {version}\" />\r\n  {/each}\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    width: var(--size);\r\n    height: var(--size);\r\n  }\r\n  .circle {\r\n    width: var(--size);\r\n    height: var(--size);\r\n    background-color: var(--color);\r\n    animation-duration: var(--duration);\r\n    border-radius: 100%;\r\n    display: inline-block;\r\n    animation: scaleOut var(--duration) ease-in-out infinite;\r\n  }\r\n  @keyframes scaleOut {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n      opacity: 0;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration}; --duration: {duration};\">\r\n  <div class=\"circle\" />\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1.7s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: var(--size);\r\n    height: var(--size);\r\n  }\r\n  .shadow {\r\n    color: var(--color);\r\n    font-size: var(--size);\r\n    overflow: hidden;\r\n    width: var(--size);\r\n    height: var(--size);\r\n    border-radius: 50%;\r\n    margin: 28px auto;\r\n    position: relative;\r\n    transform: translateZ(0);\r\n    animation: load var(--duration) infinite ease,\r\n      round var(--duration) infinite ease;\r\n  }\r\n  @keyframes load {\r\n    0% {\r\n      box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em,\r\n        0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n    }\r\n    5%,\r\n    95% {\r\n      box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em,\r\n        0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n    }\r\n    10%,\r\n    59% {\r\n      box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em,\r\n        -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em,\r\n        -0.297em -0.775em 0 -0.477em;\r\n    }\r\n    20% {\r\n      box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em,\r\n        -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em,\r\n        -0.749em -0.34em 0 -0.477em;\r\n    }\r\n    38% {\r\n      box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em,\r\n        -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em,\r\n        -0.82em -0.09em 0 -0.477em;\r\n    }\r\n    100% {\r\n      box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em,\r\n        0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n    }\r\n  }\r\n  @keyframes round {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\">\r\n  <div class=\"shadow\" />\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"4s\";\r\nexport let size = \"60\";\r\nexport let stroke = +size / 12 + unit;\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    width: var(--size);\r\n    height: var(--stroke);\r\n    transform: scale(calc(var(--floatSize) / 75));\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .line {\r\n    width: var(--size);\r\n    height: var(--stroke);\r\n    background: var(--color);\r\n    border-radius: var(--stroke);\r\n    transform-origin: center center;\r\n    animation: spineLine var(--duration) ease infinite;\r\n  }\r\n  @keyframes spineLine {\r\n    0% {\r\n      transform: rotate(-20deg);\r\n      height: 5px;\r\n      width: 75px;\r\n    }\r\n    5% {\r\n      height: 5px;\r\n      width: 75px;\r\n    }\r\n    30% {\r\n      transform: rotate(380deg);\r\n      height: 5px;\r\n      width: 75px;\r\n    }\r\n    40% {\r\n      transform: rotate(360deg);\r\n      height: 5px;\r\n      width: 75px;\r\n    }\r\n    55% {\r\n      transform: rotate(0deg);\r\n      height: 5px;\r\n      width: 5px;\r\n    }\r\n    65% {\r\n      transform: rotate(0deg);\r\n      height: 5px;\r\n      width: 85px;\r\n    }\r\n    68% {\r\n      transform: rotate(0deg);\r\n      height: 5px;\r\n    }\r\n    75% {\r\n      transform: rotate(0deg);\r\n      height: 5px;\r\n      width: 1px;\r\n    }\r\n    78% {\r\n      height: 5px;\r\n      width: 5px;\r\n    }\r\n    90% {\r\n      height: 5px;\r\n      width: 75px;\r\n      transform: rotate(0deg);\r\n    }\r\n    99%,\r\n    100% {\r\n      height: 5px;\r\n      width: 75px;\r\n      transform: rotate(-20deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --stroke: {stroke}; --floatSize: {size}; --duration: {duration}\">\r\n  <div class=\"line\" />\r\n</div>\r\n",
    "<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"3s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  .square {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    background-color: var(--color);\r\n    animation: squareDelay var(--duration) 0s infinite\r\n      cubic-bezier(0.09, 0.57, 0.49, 0.9);\r\n    animation-fill-mode: both;\r\n    perspective: 100px;\r\n    display: inline-block;\r\n  }\r\n  @keyframes squareDelay {\r\n    25% {\r\n      -webkit-transform: rotateX(180deg) rotateY(0);\r\n      transform: rotateX(180deg) rotateY(0);\r\n    }\r\n    50% {\r\n      -webkit-transform: rotateX(180deg) rotateY(180deg);\r\n      transform: rotateX(180deg) rotateY(180deg);\r\n    }\r\n    75% {\r\n      -webkit-transform: rotateX(0) rotateY(180deg);\r\n      transform: rotateX(0) rotateY(180deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotateX(0) rotateY(0);\r\n      transform: rotateX(0) rotateY(0);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"square\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\" />\r\n",
    "<script>;\r\nimport { range, durationUnitRegex } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1.2s\";\r\nexport let size = \"60\";\r\nlet durationUnit = duration.match(durationUnitRegex)[0];\r\nlet durationNum = duration.replace(durationUnitRegex, \"\");\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    display: inline-block;\r\n    text-align: center;\r\n    font-size: 10px;\r\n  }\r\n  .rect {\r\n    height: 100%;\r\n    width: 10%;\r\n    display: inline-block;\r\n    margin-right: 4px;\r\n    background-color: var(--color);\r\n    animation: stretch var(--duration) ease-in-out infinite;\r\n  }\r\n  @keyframes stretch {\r\n    0%,\r\n    40%,\r\n    100% {\r\n      transform: scaleY(0.4);\r\n    }\r\n    20% {\r\n      transform: scaleY(1);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration}\">\r\n  {#each range(5, 1) as version}\r\n    <div\r\n      class=\"rect\"\r\n      style=\"animation-delay: {(version - 1) * (+durationNum / 12)}{durationUnit}\" />\r\n  {/each}\r\n</div>\r\n",
    "<script>;\r\nimport { range, durationUnitRegex } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"0.6s\";\r\nexport let size = \"60\";\r\nlet durationUnit = duration.match(durationUnitRegex)[0];\r\nlet durationNum = duration.replace(durationUnitRegex, \"\");\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .dot {\r\n    height: var(--dotSize);\r\n    width: var(--dotSize);\r\n    background-color: var(--color);\r\n    margin: 2px;\r\n    display: inline-block;\r\n    border-radius: 100%;\r\n    animation: sync var(--duration) ease-in-out infinite alternate both running;\r\n  }\r\n\r\n  @-webkit-keyframes sync {\r\n    33% {\r\n      -webkit-transform: translateY(10px);\r\n      transform: translateY(10px);\r\n    }\r\n    66% {\r\n      -webkit-transform: translateY(-10px);\r\n      transform: translateY(-10px);\r\n    }\r\n    100% {\r\n      -webkit-transform: translateY(0);\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n  @keyframes sync {\r\n    33% {\r\n      -webkit-transform: translateY(10px);\r\n      transform: translateY(10px);\r\n    }\r\n    66% {\r\n      -webkit-transform: translateY(-10px);\r\n      transform: translateY(-10px);\r\n    }\r\n    100% {\r\n      -webkit-transform: translateY(0);\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"wrapper\" style=\"--size:{size}{unit}; --duration: {duration};\">\r\n  {#each range(3, 1) as i}\r\n    <div\r\n      class=\"dot\"\r\n      style=\"--dotSize:{+size * 0.25}{unit}; --color:{color}; animation-delay:  {i * (+durationNum / 10)}{durationUnit};\" />\r\n  {/each}\r\n</div>\r\n",
    "<script>;\r\nimport { range, durationUnitRegex } from \"./utils\";\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1.25s\";\r\nexport let size = \"60\";\r\nlet durationUnit = duration.match(durationUnitRegex)[0];\r\nlet durationNum = duration.replace(durationUnitRegex, \"\");\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: calc(var(--size) * 2.5);\r\n    height: var(--size);\r\n    overflow: hidden;\r\n  }\r\n  .bar {\r\n    position: absolute;\r\n    top: calc(var(--size) / 10);\r\n    width: calc(var(--size) / 5);\r\n    height: calc(var(--size) / 10);\r\n    margin-top: calc(var(--size) - var(--size) / 10);\r\n    transform: skewY(0deg);\r\n    background-color: var(--color);\r\n    animation: motion var(--duration) ease-in-out infinite;\r\n  }\r\n  @keyframes motion {\r\n    25% {\r\n      transform: skewY(25deg);\r\n    }\r\n    50% {\r\n      height: 100%;\r\n      margin-top: 0;\r\n    }\r\n    75% {\r\n      transform: skewY(-25deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\">\r\n  {#each range(10, 0) as version}\r\n    <div\r\n      class=\"bar\"\r\n      style=\"left: {version * (+size / 5 + (+size / 15 - +size / 100)) + unit}; animation-delay: {version * (+durationNum / 8.3)}{durationUnit};\" />\r\n  {/each}\r\n</div>\r\n",
    "<script lang=\"ts\">import Textfield from '@smui/textfield';\nimport Button, { Label, Icon as ButtonIcon } from '@smui/button';\nimport { Link, LinkQuery, Literal } from '@perspect3vism/ad4m';\nimport Card, { Content, Actions, ActionButtons } from '@smui/card';\nimport Select, { Option } from '@smui/select';\nimport 'highlight.js';\nexport let perspective;\nlet existingActions = [];\nlet newName = '';\nlet newCode = [];\nlet newCommand = 'addLink';\nlet newParams1 = '';\nlet newParams2 = '';\nlet newParams3 = '';\nasync function addCommand() {\n    let command = {\n        action: newCommand\n    };\n    //@ts-ignore\n    command.source = newParams1;\n    //@ts-ignore\n    command.predicate = newParams2;\n    //@ts-ignore\n    command.target = newParams3;\n    newCode = [...newCode, command];\n}\nasync function add() {\n    const actionNode = `ad4m://expression_action:${newName}`;\n    await perspective.add(new Link({\n        source: 'self',\n        predicate: 'ad4m://has_action',\n        target: actionNode\n    }));\n    await perspective.add(new Link({\n        source: actionNode,\n        predicate: 'ad4m://has_body',\n        target: Literal.from(newCode).toUrl()\n    }));\n}\nasync function update() {\n    let links = await perspective.get(new LinkQuery({\n        source: 'self',\n        predicate: 'ad4m://has_action'\n    }));\n    const urlPrefix = 'ad4m://expression_action:';\n    links = links.filter(l => l.data.target.startsWith(urlPrefix));\n    existingActions = [];\n    for (let link of links) {\n        console.log(link.data);\n        const actionNode = link.data.target;\n        const name = actionNode.substr(urlPrefix.length);\n        console.log('actionNode', actionNode);\n        let bodyLinks = await perspective.get(new LinkQuery({\n            source: actionNode,\n            predicate: 'ad4m://has_body'\n        }));\n        console.log('bodyLinks', bodyLinks);\n        if (bodyLinks.length == 1) {\n            const bodyLink = bodyLinks[0];\n            existingActions = [...existingActions, {\n                    link,\n                    code: Literal.fromUrl(bodyLink.data.target).get(),\n                    name\n                }];\n        }\n    }\n}\nfunction deleteAction(action) {\n    perspective.remove(action.link);\n}\nperspective.addListener(() => {\n    update();\n    return null;\n});\nperspective.removeListener(() => {\n    update();\n    return null;\n});\nupdate();\n</script>\n\n{#each existingActions as action}\n<Card variant=\"outlined\">\n    <Content>\n        <div class=\"action-name\">{action.name}</div>\n        <div class=\"action-code\">\n            <ul>\n                {#each action.code as cmd}\n                    <li>\n                    {#if cmd.action == 'addLink'}\n                        addLink({cmd.source},{cmd.predicate},{cmd.target})\n                    {:else if cmd.action == 'removeLink'}\n                        removeLink({cmd.source},{cmd.predicate},{cmd.target})\n                    {:else}\n                        unrecognized command\n                    {/if}\n                    </li>\n                {/each}\n            </ul>\n        </div>\n    </Content>\n    <Actions>\n        <ActionButtons>\n            <Button variant=\"outlined\" on:click={()=>deleteAction(action)}>\n                <ButtonIcon class=\"material-icons\">delete</ButtonIcon>\n                <Label>Delete</Label>\n            </Button>\n        </ActionButtons>\n    </Actions>\n</Card>\n\n\n{/each}\n\n<hr>\n<h3>Create new perspective action</h3>\n<Textfield \n    bind:value={newName} \n    variant=\"outlined\" \n    label=\"New Action Name\">\n</Textfield>\n\n<ul>\n    {#each newCode as cmd}\n        <li>\n        {#if cmd.action == 'addLink'}\n            addLink({cmd.source},{cmd.predicate},{cmd.target})\n        {:else if cmd.action == 'removeLink'}\n            removeLink({cmd.source},{cmd.predicate},{cmd.target})\n        {:else}\n            unrecognized command: {cmd.action}\n        {/if}\n        </li>\n    {/each}\n</ul>\n\n<Card>\n    <Content>\n        <Select class=\"shaped-outlined\"\n        variant=\"outlined\"\n        bind:value={newCommand}\n        label=\"Command type\">\n            <Option value=\"addLink\">addLink</Option>\n            <Option value=\"removeLink\">removeLink</Option>\n        </Select>\n        \n        <div class=\"params\">\n            <Textfield \n                bind:value={newParams1} \n                variant=\"outlined\" \n                label=\"source\">\n            </Textfield>\n            <Textfield \n                bind:value={newParams2} \n                variant=\"outlined\" \n                label=\"predicate\">\n            </Textfield>\n            <Textfield \n                bind:value={newParams3} \n                variant=\"outlined\" \n                label=\"target\">\n            </Textfield>\n        </div>\n    </Content>\n    <ActionButtons>\n        <Button on:click={addCommand}>\n            <Label>Add Command</Label>\n        </Button>\n    </ActionButtons>\n</Card>\n\n\n\n<Button on:click={add} enabled={newCode.length > 0}>\n    <Label>Write new Action</Label>\n</Button>\n\n<style>\n    .action-name {\n        font-weight: bold;\n    }\n\n    .zome-code {\n        overflow: scroll;\n        white-space: pre;\n    }\n\n    .new-command {\n        border: 1px black solid;\n        border-radius: 10px;\n    }\n\n    .params {\n        display: flex;\n    }\n</style>",
    "<script lang=\"ts\">import Dialog, { Title, Content, Actions } from '@smui/dialog';\nimport ExpressionConstructorWizard from './ExpressionConstructorWizard.svelte';\nimport Button, { Label } from '@smui/button';\nimport { createEventDispatcher } from 'svelte';\nimport { executeCustomAction } from \"./executeCustomAction\";\nconst dispatch = createEventDispatcher();\nexport let perspective;\nlet expressionWizard;\nlet expressionWizardDialog;\nlet classBeingInstantiated;\nlet ontologyClasses = [];\nperspective.infer(\"register_ontology_class(Name, c), instantiate_class(c, Action), class_color(c, Color)\").then(results => {\n    ontologyClasses = results;\n    console.log(ontologyClasses);\n});\nfunction classClicked(name) {\n    classBeingInstantiated = name;\n    expressionWizard.reset();\n    expressionWizardDialog.open();\n}\nasync function expressionCreated(e) {\n    let url = e.detail;\n    let ontologyClass = ontologyClasses.find(c => c.Name == classBeingInstantiated);\n    if (!ontologyClass) {\n        console.error(\"Could not find ontology class!\");\n        return;\n    }\n    await perspective.add({ source: 'ad4m://self', target: url });\n    console.debug(ontologyClass.Action);\n    let action = eval(ontologyClass.Action);\n    await executeCustomAction(action, url, perspective);\n    expressionWizardDialog.close();\n}\n</script>\n\n<div class=\"palette-container\">\n    <div class=\"palette-item\">\n        <span class=\"material-icons\">text_fields</span>\n    </div>\n    {#each ontologyClasses as customClass}\n        <div class=\"palette-item\" on:click={()=>classClicked(customClass.Name)}>\n            <span title=\"{customClass.Name}\" class=\"ontology-class\" style={`background-color: ${customClass.Color};`}>\n                <span class=\"ontology-class-text\">{customClass.Name}</span>\n            </span>\n        </div>\n    {/each}\n</div>\n\n<div class=\"dialog-class\">\n    <Dialog bind:this={expressionWizardDialog}>\n        <Title>Create Expression as base for {classBeingInstantiated}</Title>\n        <Content>\n            <i>Select language of base experssion:</i>\n            <ExpressionConstructorWizard\n                bind:this={expressionWizard}\n                on:expression-created={expressionCreated}>\n            </ExpressionConstructorWizard>\n        </Content>\n        <Actions>\n            <Button on:click={expressionWizardDialog.close}>\n                <Label>Cancel</Label>\n            </Button>\n        </Actions>\n    </Dialog>    \n</div>\n\n\n<style>\n   .palette-container {\n        background-color: bisque;\n        width: 50px;\n   } \n\n   .palette-item {\n        width: 50px;\n        height: 50px;\n        padding: 3px;    \n   }\n\n   .ontology-class {\n        position: relative;\n        width: 42px;\n        height: 42px;\n        display: block;\n        border-radius: 25px;\n   }\n\n   .ontology-class-text {   \n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 10px;\n   }\n\n   .dialog-class {\n    width: 444px;\n    height: 419px;\n   } \n</style>\n",
    "<script lang=\"ts\">import { createEventDispatcher } from 'svelte';\nimport Textfield, { Input } from '@smui/textfield';\nimport FloatingLabel from '@smui/floating-label';\nimport LineRipple from '@smui/line-ripple';\nimport Button, { Label, Icon } from '@smui/button';\nimport ExpressionIcon from './ExpressionIcon.svelte';\nimport Switch from '@smui/switch';\nimport FormField from '@smui/form-field';\nconst dispatch = createEventDispatcher();\nlet urlTemp;\nlet url;\nlet expression;\nlet plain = false;\nfunction load() {\n    url = urlTemp;\n}\nfunction close() {\n    dispatch('close');\n}\nfunction link() {\n    dispatch('link-expresson', url);\n    dispatch('close');\n}\n</script>\n\n<div>\n    <span class=\"right\">\n        <Button class=\"right\" on:click={close}>\n            <Label>Close</Label>\n            <Icon class=\"material-icons\">close</Icon>\n        </Button>\n    </span>\n\n    \n    <Textfield fullwidth lineRipple={false} label=\"URL\">\n        <Input bind:value={urlTemp} id=\"input-url\"/>\n        <FloatingLabel for=\"input-name\">Expression URL</FloatingLabel>\n        <LineRipple />\n    </Textfield>\n\n    <div class=\"get-button\">\n        <Button variant=\"raised\" on:click={load}>\n            <Label>Get</Label>\n        </Button>\n    </div>\n    \n\n</div>\n\n{#if url && url.length > 0}\n    <FormField>\n        <Switch bind:checked={plain} />\n        <span slot=\"label\">Show plain source</span>\n    </FormField>\n    <div class=\"expression-container\">\n        <ExpressionIcon expressionURL={url} plain={plain}></ExpressionIcon>\n    </div>\n\n    <div class=\"link-button\">\n        <Button variant=\"raised\" on:click={link}>\n            <Icon class=\"material-icons\">add_to_drive</Icon>\n            <Label>Link into Perspective</Label>\n        </Button>\n    </div>\n{/if}\n\n<style>\n    .right {\n        float: right;\n    }\n\n    .get-button {\n        position: relative;\n        right: 0;\n        top: 10px;\n    }\n\n    .link-button {\n        bottom: 20px;\n        right: 30px;\n        position: absolute;\n    }\n\n    .expression-container {\n        margin-top: 20px;\n        margin-left: auto;\n        margin-right: auto;\n        width: 1px\n    }\n</style>",
    "<script lang=\"ts\">import { getContext, createEventDispatcher } from 'svelte';\nimport Tab, { Icon, Label } from '@smui/tab';\nimport TabBar from '@smui/tab-bar';\nimport Textfield, { Textarea } from '@smui/textfield';\nimport Button, { Label as ButtonLabel } from '@smui/button';\nimport { Literal } from '@perspect3vism/ad4m';\nimport Radio from '@smui/radio';\nimport FormField from '@smui/form-field';\nimport Autocomplete from '@smui-extra/autocomplete';\nimport iconComponentFromString from './iconComponentFromString';\nconst dispatch = createEventDispatcher();\nconst ad4m = getContext('ad4mClient');\nlet languages;\nasync function getLanguages() {\n    languages = await ad4m.languages.byFilter('expressionUI');\n}\ngetLanguages();\n/*\nlet languageIcons = {\n    'note-ipfs': 'note',\n    'url-iframe': 'link',\n    'agent-expression-store': 'account_circle'\n}*/\nlet tabs = [\n    { k: 1, label: 'Literal', icon: 'text_snippet' },\n    { k: 2, label: 'Dynamic', icon: 'waves' }\n];\nlet active = tabs[0];\nlet literalType = 'string';\nlet literalInput = '';\nlet literalValue = '';\nlet literalError;\nexport function reset() {\n    literalType = 'string';\n    literalInput = '';\n    literalValue = '';\n    literalError = undefined;\n}\n$: if (literalInput) {\n    literalValue = updateLiteralValue(literalInput);\n}\n$: if (literalType) {\n    literalValue = updateLiteralValue(literalInput);\n}\nfunction updateLiteralValue(input) {\n    let value;\n    literalError = undefined;\n    try {\n        switch (literalType) {\n            case 'string':\n                value = input;\n                break;\n            case 'number':\n                value = parseFloat(input);\n                if (isNaN(value)) {\n                    literalError = \"Not a number\";\n                }\n                break;\n            case 'object':\n                value = JSON.parse(input);\n                break;\n        }\n    }\n    catch (e) {\n        literalError = e;\n        return literalValue;\n    }\n    return value;\n}\nfunction createLiteral() {\n    let literal = Literal.from(literalValue);\n    console.log(literal.toUrl());\n    dispatch('expression-created', literal.toUrl());\n}\nlet selectedLanguageName = '';\nlet constructorIconComponents = {};\nlet constructorContainer;\n$: if (selectedLanguageName) {\n    let language = languages.find(l => l.name === selectedLanguageName);\n    if (language)\n        createExpressionConstructorIcon(language);\n}\nasync function createExpressionConstructorIcon(lang) {\n    console.log(\"Create expression:\", lang, JSON.stringify(lang));\n    if (!constructorIconComponents[lang.name]) {\n        const language = await ad4m.languages.byAddress(lang.address);\n        const code = language.constructorIcon.code;\n        const ConstructorIcon = iconComponentFromString(code, lang.name);\n        constructorIconComponents[lang.name] = ConstructorIcon;\n        customElements.define(lang.name + \"-constructor\", ConstructorIcon);\n    }\n    const container = constructorContainer;\n    container.innerHTML = '';\n    const constructorIcon = new constructorIconComponents[lang.name]();\n    constructorIcon.commitExpression = async (content) => {\n        commitExpression(lang, content, container);\n    };\n    constructorIcon.discard = () => {\n        container.innerHTML = '';\n    };\n    container.appendChild(constructorIcon);\n}\nasync function commitExpression(lang, content, container) {\n    const exprURL = await ad4m.expression.create(JSON.stringify(content), lang.address);\n    console.log(\"Created new expression:\", exprURL);\n    dispatch('expression-created', exprURL);\n    container.innerHTML = '';\n}\n</script>\n\n<div class=\"header\">\n    <TabBar {tabs} let:tab key={(tab) => tab.k} bind:active>\n        <Tab\n            {tab}\n            stacked={true}\n            indicatorSpanOnlyContent={true}\n            tabIndicator$transition=\"fade\"\n            >\n            <Icon class=\"material-icons\">{tab.icon}</Icon>\n            <Label>{tab.label}</Label>\n        </Tab>\n    </TabBar>\n</div>\n\n<div class=\"content1\">\n    {#if active.label == 'Literal' }\n        <div class=\"header\">\n            <FormField>\n                <Radio bind:group={literalType} value='string'/>\n                <Icon class=\"material-icons\">text_format</Icon>\n                <span slot=\"label\">String</span>\n            </FormField>\n            <FormField>\n                <Radio bind:group={literalType} value='number'/>\n                <Icon class=\"material-icons\">pin</Icon>\n                <span slot=\"label\">Number</span>\n            </FormField>\n            <FormField>\n                <Radio bind:group={literalType} value='object'/>\n                <Icon class=\"material-icons\">data_object</Icon>\n                <span slot=\"label\">Object</span>\n            </FormField>\n        </div>\n        <div class=\"content2\">\n            {#if literalType != 'object'}\n                <Textfield\n                    class=\"shaped-outlined\"\n                    bind:value={literalInput}\n                    variant=\"outlined\"\n                    label=\"Literal Value\"\n                ></Textfield>\n            {:else}\n                <Textarea\n                    class=\"shaped-outlined\"\n                    bind:value={literalInput}\n                    variant=\"outlined\"\n                    label=\"Literal Value\"\n                ></Textarea>\n            {/if}\n            {#if literalError}\n                <div class=\"error\">{literalError}</div>\n            {/if}\n            <p></p>\n            <Button variant=\"raised\" on:click={createLiteral} disabled={literalError}>\n                <ButtonLabel>Ok</ButtonLabel>\n            </Button>\n        </div>\n    {:else}\n        <div class=\"dynamic-content\">\n            <span>Select Language:</span>\n            {#if languages}\n                <Autocomplete\n                    bind:value={selectedLanguageName}\n                    options={languages.map(l=>l.name)}\n                    label=\"Language name\"\n                    textfield$variant=\"outlined\"\n                ></Autocomplete>\n            {/if}\n            <div bind:this={constructorContainer} class=\"constructor-container\"></div>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .dynamic-content {\n        width: 500px;\n        height: 600px;\n    }\n</style>",
    "<script lang=\"ts\">import { Literal, parseExprUrl, Perspective } from \"@perspect3vism/ad4m\";\nimport iconComponentFromString from \"./iconComponentFromString\";\nimport { getContext, createEventDispatcher } from 'svelte';\nconst dispatch = createEventDispatcher();\nimport \"@apollo/client\";\nimport './uiUtils';\nimport emailValidator from 'email-validator';\nimport md5 from 'md5';\nimport { Graphic } from '@smui/list';\nimport { DoubleBounce } from 'svelte-loading-spinners';\nexport let expressionURL;\nexport let parentLink;\nexport let componentConstructor;\nexport let selected;\nexport let perspectiveUUID;\nexport let plain;\nconst ad4m = getContext('ad4mClient');\nlet expression = null;\nlet expressionRaw = null;\nlet expressionRef = null;\nlet iconReady = false;\nlet childLinks = null;\nlet loading = true;\nlet authorName = null;\nlet authorEmail = null;\n$: if (expressionURL && loading)\n    ad4m.expression.get(expressionURL).then(result => {\n        expression = result;\n        console.log(\"Expression:\", JSON.stringify(expression));\n        loading = false;\n    });\n$: if (expressionURL && plain && loading)\n    ad4m.expression.getRaw(expressionURL).then(result => {\n        expressionRaw = result;\n        loading = false;\n    });\n$: if (expressionURL && perspectiveUUID)\n    ad4m.perspective.queryLinks(perspectiveUUID, { source: expressionURL })\n        .then(result => {\n        childLinks = result;\n    });\n$: if (expression)\n    ad4m.expression.get(expression.author).then(result => {\n        let author = JSON.parse(result.data);\n        console.log(\"Expression author:\", author);\n        let did = author.did;\n        let firstName, lastName, email;\n        let perspective = new Perspective(author.perspective.links);\n        console.log(\"single target: \", perspective.getSingleTarget({ source: did, predicate: 'foaf://givenName' }));\n        try {\n            firstName = Literal.fromUrl(perspective.getSingleTarget({ source: did, predicate: 'foaf://givenName' })).get();\n        }\n        catch (e) {\n            firstName = \"<not set>\";\n        }\n        try {\n            lastName = Literal.fromUrl(perspective.getSingleTarget({ source: did, predicate: 'foaf://familyName' })).get();\n        }\n        catch (e) {\n            lastName = \"<not set>\";\n        }\n        try {\n            email = Literal.fromUrl(perspective.getSingleTarget({ source: did, predicate: 'foaf://mbox' })).get();\n        }\n        catch (e) {\n            email = \"<not set>\";\n        }\n        authorName = `${firstName} ${lastName}`;\n        authorEmail = email;\n    });\n//let expression: void | Expression = null\nlet customElementName = null;\nlet container;\nfunction iconComponentName(languageAddress) {\n    const onlyLetters = languageAddress\n        .split('')\n        .filter(letter => { return /[a-z]|[A-Z]/.test(letter); })\n        .join('');\n    const short = onlyLetters.substr(onlyLetters.length - 10, 10).toLowerCase();\n    console.debug(languageAddress, '->', onlyLetters, '->', short);\n    return 'icon-' + short;\n}\nasync function getComponentConstructor() {\n    componentConstructor = customElements.get(customElementName);\n    if (!componentConstructor) {\n        try {\n            const exprRef = parseExprUrl(expressionURL);\n            const lang = await ad4m.languages.byAddress(exprRef.language.address);\n            const code = lang.icon.code;\n            componentConstructor = iconComponentFromString(code, \"icon\");\n            customElements.define(customElementName, componentConstructor);\n        }\n        catch (e) {\n            console.error(e);\n            componentConstructor = customElements.get(customElementName);\n        }\n    }\n}\n$: if (!loading) {\n    customElementName = iconComponentName(expression.language.address);\n}\n$: if (customElementName) {\n    if (!componentConstructor) {\n        getComponentConstructor();\n    }\n}\n$: if (container && componentConstructor && !loading) {\n    iconReady = false;\n    const icon = new componentConstructor();\n    //const expression = JSON.parse(JSON.stringify($queryResult))\n    try {\n        expression.data = JSON.parse(expression.data);\n    }\n    catch (e) { }\n    icon.expression = expression;\n    while (container.lastChild)\n        container.removeChild(container.lastChild);\n    container.appendChild(icon);\n    iconReady = true;\n}\nlet width;\nlet height;\nlet depth = 30;\n$: if (container && iconReady) {\n    width = container.offsetWidth;\n    height = container.offsetHeight;\n}\nexport let rotated = false;\nfunction rightClick(mouseEvent) {\n    mouseEvent.stopPropagation();\n    dispatch('context-menu', { expressionURL, mouseEvent, parentLink });\n}\n</script>\n\n{#if plain }\n<div>\n    {#if loading}\n        <DoubleBounce size=\"60\" color=\"#7f81ff\" unit=\"px\" duration=\"1s\"></DoubleBounce>\n    {:else}\n        {expressionRaw}\n    {/if}\n</div>\n{:else}\n<div class=\"box\" on:contextmenu={rightClick} style={`transform: rotateY(${rotated?180:0}deg)`}>\n<div class=\"displacement-container\" style={`transform: translateX(-${width/2}px);`}>\n    {#if loading}\n        <DoubleBounce size=\"60\" color=\"#7f81ff\" unit=\"px\" duration=\"1s\"></DoubleBounce>\n    {:else}\n    <div class=\"box__face container\" class:selected class:invalid=\"{!expression?.proof?.valid}\" bind:this={container}/>\n    <div class=\"box__face back\" style={`transform:   rotateY(180deg) translateZ(${depth}px); width: ${width}px; height: ${height}px;`}>\n        <div class=\"backside-content\">\n            <div>\n                <h2 class=\"header\">Author</h2>\n                {#if emailValidator.validate(authorEmail) }\n                    <img class=\"avatar\" src=\"http://www.gravatar.com/avatar/{md5(authorEmail)}?s=75\" alt=\"gravatar\">\n                {/if}\n                <span class=\"property\">Name:</span><span class=\"value\">{authorName}</span>\n                <br>\n                <span class=\"property\">Email:</span><span class=\"value\">{authorEmail}</span>\n                <br>\n                <span class=\"property\">DID:</span> <span class=\"value\">{expression?.author}</span>\n            </div>\n            <div>\n                <h2 class=\"header\">Timestamp</h2> \n                <span class=\"value\">{expression?.timestamp}</span>\n            </div>\n            <h2 class=\"header\">URL</h2> <span class=\"value\">{expressionURL}</span>\n            <div class=\"signature-verification\">\n                {#if !expression?.proof}\n                    <span class=\"broken\">\n                        Signature MISSING\n                        <Graphic class=\"material-icons\" aria-hidden=\"true\" style=\"color: red; margin-right: 0;\">rounded_corner</Graphic>\n                    </span>\n                {:else}\n                    {#if expression?.proof?.valid}\n                        <span class=\"verified\">\n                            Signature verified\n                            <Graphic class=\"material-icons\" aria-hidden=\"true\" style=\"color: green; margin-right: 0;\">verified</Graphic>\n                        </span>\n                    {/if}\n                    {#if expression?.proof?.invalid}\n                        <span class=\"broken\">\n                            Signature BROKEN\n                            <Graphic class=\"material-icons\" aria-hidden=\"true\" style=\"color: red; margin-right: 0;\">warning</Graphic>\n                        </span>\n                    {/if}\n                {/if}\n            </div>\n        </div>\n    </div>\n    <div class=\"box__face right\" style={`transform:  translateX(${width-depth/2}px)  translateZ(-${depth/2}px) rotateY(90deg); width: ${depth}px; height: ${height}px;`}>right</div>\n    <div class=\"box__face left\" style={`transform:  translateX(-${depth/2}px) rotateY(-90deg) translateX(-${depth/2}px); width: ${depth}px; height: ${height}px;`}>left</div>\n    {/if}\n</div>\n</div>\n{/if}\n<!--\n{#if childLinks}\n    {JSON.stringify($childLinks)}\n{/if}\n\n{#if childLinks}\n    <ul class=\"child-plane\">\n        {#each childLinks as link}\n            <li class=\"inline expression-list-container\" \n            style={`position: absolute; transform: translateX(${linkTo2D(link).x}px) translateY(${linkTo2D(link).y}px);`}>\n                <svelte:self \n                    expressionURL={link.data.target}\n                    parentLink={link}\n                    perspectiveUUID={perspectiveUUID}>\n                </svelte:self>\n            </li>\n        {/each}    \n    </ul>\n    \n{/if}\n-->\n<style>\n    .container {\n        display: inline-block;\n        border: 2px solid;\n        overflow: hidden;\n    }\n\n    .invalid {\n        border: 5px solid red !important;\n    }\n\n    .selected {\n        border: 10px solid yellow !important;\n    }\n\n    .box {\n        width: 100%;\n        height: 100%;\n        position: relative;\n        transform-style: preserve-3d;\n        transition: transform 0.5s;\n    }\n\n    .box__face {\n        position: absolute;\n        background-color:rgb(27, 32, 32);\n        border: 1px solid rgb(127, 129, 255);\n    }\n\n    .backside-content {\n        overflow: auto;\n        color: white;\n    }\n\n    .backside-content .header {\n        margin-top: 0;\n        margin-bottom: 5px;\n        color: rgb(127, 129, 255)\n    }\n\n    .backside-content .property {\n        margin-right: 2px;\n        color: rgb(127, 129, 255)\n    }\n\n    .backside-content .value {\n        color: rgb(127, 219, 255);\n        word-break: break-all;\n    }\n\n    .displacement-container {\n        transform-style: preserve-3d;\n    }\n\n    .child-plane {\n        transform: translateZ(-2000px);\n    }\n\n    .inline {\n        display: inline;\n        transform-style: preserve-3d;\n    }\n\n    .avatar {\n        float: left;\n        margin-left: 5px;\n        margin-right: 5px;\n        width: 75px;\n        height: 75px;\n    }\n\n    .signature-verification {\n        position: absolute;\n        bottom: 0;\n        right: 0;\n    }\n    .verified {\n        color: green;\n    }\n\n    .broken {\n        color: red;\n    }\n</style>",
    "<svelte:options accessors={true}></svelte:options>\n<script lang=\"ts\">import { Link } from '@perspect3vism/ad4m';\nimport Button, { Label } from '@smui/button';\nimport Dialog, { Title, Content, Actions } from '@smui/dialog';\nimport { createEventDispatcher } from 'svelte';\nimport ExpressionConstructorWizard from './ExpressionConstructorWizard.svelte';\nimport LinkUrlPicker from './LinkUrlPicker.svelte';\nconst dispatch = createEventDispatcher();\nexport let source = \"\";\nexport let predicate = \"\";\nexport let target = \"\";\nexport let perspective;\nexport function reset() {\n    source = predicate = target = \"\";\n}\nlet expressionWizard;\nlet expressionWizardDialog;\nlet targetForExpressionWizard;\nfunction addLink() {\n    perspective.add(new Link({\n        source,\n        predicate,\n        target\n    }));\n    dispatch('ok');\n}\nexport function createExpression(target) {\n    targetForExpressionWizard = target;\n    expressionWizard.reset();\n    expressionWizardDialog.open();\n}\nfunction expressionCreated(e) {\n    let url = e.detail;\n    switch (targetForExpressionWizard) {\n        case 'source':\n            source = url;\n            break;\n        case 'target':\n            target = url;\n            break;\n        case 'predicate':\n            predicate = url;\n            break;\n    }\n    expressionWizardDialog.close();\n}\n</script>\n\n<Dialog bind:this={expressionWizardDialog}>\n    <Title>Create Expression</Title>\n    <Content>\n        <i>For {targetForExpressionWizard}</i>\n        <ExpressionConstructorWizard\n            bind:this={expressionWizard}\n            on:expression-created={expressionCreated}>\n        </ExpressionConstructorWizard>\n    </Content>\n    <Actions>\n        <Button on:click={expressionWizardDialog.close}>\n            <Label>Cancel</Label>\n        </Button>\n    </Actions>\n</Dialog>\n\n<div class=\"container\">\n    <div class=\"flex\">\n        <span class=\"paper\">\n            <LinkUrlPicker \n                label=\"Source\" \n                bind:value={source} \n                on:pick={(e)=>dispatch('pick', e.detail)}\n                on:create={()=>createExpression('source')}>\n            </LinkUrlPicker>\n        </span>\n        <span class=\"paper\">\n            <LinkUrlPicker \n                label=\"Predicate\" \n                bind:value={predicate}\n                on:pick={(e)=>dispatch('pick', e.detail)}\n                on:create={()=>createExpression('predicate')}>\n            </LinkUrlPicker>\n        </span>\n        <span class=\"paper\">\n            <LinkUrlPicker \n                label=\"Target\" \n                bind:value={target}\n                on:pick={(e)=>dispatch('pick', e.detail)}\n                on:create={()=>createExpression('target')}>\n            </LinkUrlPicker>\n        </span>\n    </div>\n    \n\n    <Button variant=\"outlined\" on:click={()=>dispatch('cancel')}>\n        <Label>Cancel</Label>\n    </Button>\n    <Button variant=\"raised\" on:click={addLink}>\n        <Label>Add Link</Label>\n    </Button>\n</div>\n\n<style>\n    .container {\n        margin-top: -200px;\n        height: 200px;\n        background-color: #ffffffe0;\n        text-align: center;\n    }\n\n    .flex {\n        display: flex;\n        margin-bottom: 10px;\n    }\n\n    .paper {\n        display: inline-block;\n        flex: auto;\n    }\n</style>",
    "<script lang=\"ts\">import { getAllContexts, onMount } from \"svelte\";\nimport TopAppBar, { Row, Section, Title } from '@smui/top-app-bar';\nimport IconButton from '@smui/icon-button';\nimport Drawer, { Content, Header, Title as DrawerTitle, Subtitle, Scrim } from '@smui/drawer';\nimport { Item, Text, Graphic } from '@smui/list';\nimport Dialog, { Title as DialogTitle, Content as DialogContent, Actions } from '@smui/dialog';\nimport Button, { Label } from '@smui/button';\nimport PerspectiveWrapper from './PerspectiveWrapper.svelte';\nimport LanguagesSettings from './LanguagesSettings.svelte';\nimport Zumly from 'zumly';\nimport ZoomRoot from './ZoomRoot.svelte';\n//const ad4m: Ad4mClient = getContext('ad4mClient')\nconst allContexts = getAllContexts();\nlet collapsed = false;\nlet collapsing = false;\nlet drawerOpen = false;\nlet languageSettingsDialog;\nonMount(async () => {\n    // Zumly instance\n    const zumly = new Zumly({\n        mount: '#zoom-container',\n        initialView: 'ZoomRoot',\n        views: {\n            ZoomRoot,\n            PerspectiveWrapper,\n        },\n        componentContext: allContexts,\n        // Customize transitions. Object. Optional\n        transitions: {\n            // Effects for background views. Array. ['blur', 'sepia', 'saturate']\n            effects: ['blur'],\n            // How new injected view is adapted. String. Default 'width'\n            cover: 'height',\n            // Transition duration. String. Default '1s'\n            duration: '400ms',\n            // Transition ease. String. Default 'ease-in-out'\n            //ease: 'cubic-bezier(0.25,0.1,0.25,1)'\n            ease: 'ease-out'\n        },\n        // Activate debug notifications. Boolean. Default false\n        debug: true\n    });\n    await zumly.init();\n    zumly.componentContext.set('zumly', zumly);\n});\n</script>\n\n<Drawer variant=\"modal\" bind:open={drawerOpen}>\n\t<Content>\n\t\t<Header>\n\t\t\t<DrawerTitle>Settings</DrawerTitle>\n\t\t\t<Subtitle>\n\t\t\t\tManage installed Languages and other stuff\n\t\t\t</Subtitle>\n\t\t</Header>\n\n\t\t<Item \n\t\t\ton:click={() => languageSettingsDialog.open()}\n\t\t>\n\t\t\t<Graphic class=\"material-icons\" aria-hidden=\"true\">insert_comment</Graphic>\n\t\t\t<Text>Manage Languages</Text>\n\t\t</Item>\n\t</Content>\n</Drawer>\n<Scrim></Scrim>\n\n<TopAppBar dense='true' variant='static' \n\tbind:collapsed\n\ton:mouseenter=\"{e => collapsing ? collapsed=false : undefined}\"\n\ton:mouseleave=\"{e => collapsing ? collapsed=true : undefined}\"\n>\n\t<Row>\n\t<Section>\n\t\t<IconButton class=\"material-icons\" on:click={() => {drawerOpen = !drawerOpen}}>menu</IconButton>\n\t\t<Title>\n\t\t\tDashboard\n\t\t</Title>\n\t</Section>\n\t</Row>\n</TopAppBar>\n\n<div id=\"zoom-container\"></div>\n\n\n<Dialog bind:this={languageSettingsDialog}>\n\t<DialogTitle>Language Settings</DialogTitle>\n\t<DialogContent>\n\t\t<LanguagesSettings></LanguagesSettings>\n\t</DialogContent>\n\t<Actions>\n\t\t<Button on:click={languageSettingsDialog.close}>\n\t\t\t<Label>Close</Label>\n\t\t</Button>\n\t</Actions>\n</Dialog>\n\n<style>\n\tmain {\n\t\theight: 100%;\n\t\ttext-align: center;\n\t\tpadding: 0;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\t#zoom-container {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 48px;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-image: url(../images/dashboard-background.png);\n\t\tbackground-position: center;\n\t\tbackground-size: cover;\n\t}\n\n\th1 {\n\t\tcolor: #00c3ff;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t.centered {\n\t\tmargin-top: 100px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\twidth: 380px;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script lang=\"ts\">import { getContext, createEventDispatcher } from \"svelte\";\nimport { hashLinkExpression, linkEqual, Link } from '@perspect3vism/ad4m';\nimport ExpressionIcon from './ExpressionIcon.svelte';\nimport iconComponentFromString from './iconComponentFromString';\nimport ConstructionMenu from './ConstructionMenu.svelte';\nimport ExpressionContextMenu from \"./ExpressionContextMenu.svelte\";\nimport { linkTo2D, coordToPredicate } from './uiUtils';\nimport { linksStoreForPerspective } from \"./LinksStore\";\nexport let perspective;\nexport let uuid;\nconst dispatch = createEventDispatcher();\nconst ad4m = getContext('ad4mClient');\nif (!perspective && uuid) {\n    (async () => {\n        perspective = await ad4m.perspective.byUUID(uuid);\n    })();\n}\nad4m.perspective.addPerspectiveUpdatedListener(async (p) => {\n    //@ts-ignore\n    if (p.uuid == perspective.uuid || p.uuid == uuid) {\n        //@ts-ignore\n        perspective = await ad4m.perspective.byUUID(perspective.uuid);\n    }\n});\nlet linksStore;\nlet constructionMenu;\nlet languages = [];\nlet languageIcons = {\n    'note-ipfs': 'note',\n    'url-iframe': 'link'\n};\nlet constructorIconComponents = {};\nlet iconStates = {};\nlet content;\nlet container;\nlet zoom = 0;\nlet translateX = 0;\nlet translateY = 0;\nlet isPanning = false;\nlet isMovingExpression = false;\nlet movingLink;\nlet movingLinkOriginal;\nlet isLinking = false;\nlet linkingSource;\nlet linkingCursor = {};\nlet dropMove = false;\nlet dropMoveTarget;\n$: if (content && zoom != undefined && translateX != undefined && translateY != undefined) {\n    console.debug(\"SET TRANSFORM:\", zoom);\n    content.setAttribute(\"style\", calcPerspectiveContentStyle());\n}\nfunction calcPerspectiveContentStyle() {\n    return `\n            position: absolute; \n            width: 100%; height: 100%; \n            top: 0; left: 0;\n            transform: translateX(${translateX}px) translateY(${translateY}px) translateZ(${zoom}px);\n            transform-style: preserve-3d;\n        `;\n}\nfunction handleMouseWheel(event) {\n    let factor = 0.3;\n    const normalized = Math.abs(zoom / 3);\n    if (zoom < 0 && normalized > 2) {\n        factor = 0.3 * Math.log2(normalized);\n    }\n    zoom -= event.deltaY * factor;\n    if (zoom > 45)\n        zoom = 45;\n    console.log(\"zoom:\", zoom);\n}\nfunction zoomNormalizedMouseMove(coords) {\n    let factor;\n    if (zoom < 0) {\n        const dist = -zoom;\n        factor = 1 + (dist / 1000);\n    }\n    else {\n        const dist = zoom;\n        factor = 1 - (dist / 1000);\n    }\n    return {\n        x: coords.x * factor,\n        y: coords.y * factor,\n    };\n}\nfunction dist(c1, c2) {\n    const x = c1.x - c2.x;\n    const y = c1.y - c2.y;\n    return Math.sqrt(x * x + y * y);\n}\nfunction hoveredLink(coords, moving) {\n    var _a;\n    for (const i in $linksStore) {\n        const link = $linksStore[i];\n        if (link.data.source === \"root\" && ((_a = link.data.predicate) === null || _a === void 0 ? void 0 : _a.startsWith(\"coord2d://\")) && link.data.target != moving.target) {\n            const linkCoords = linkTo2D(link);\n            const d = dist(coords, linkCoords);\n            if (d < 300)\n                return link;\n        }\n    }\n    return null;\n}\nfunction handleMouseMove(event) {\n    const d = zoomNormalizedMouseMove({ x: event.movementX, y: event.movementY });\n    if (isPanning) {\n        translateX += d.x;\n        translateY += d.y;\n    }\n    if (isMovingExpression) {\n        let point = linkTo2D(movingLink);\n        point.x += d.x;\n        point.y += d.y;\n        movingLink.data.predicate = coordToPredicate(point);\n        dropMoveTarget = hoveredLink(point, movingLink.data);\n        if (dropMoveTarget) {\n            dropMove = true;\n            console.log(\"drop move!\");\n        }\n        else {\n            dropMove = false;\n        }\n        //linksStore.update(movingLink)\n    }\n    if (isLinking) {\n        linkingCursor = zoomNormalizedMouseMove({\n            x: event.clientX,\n            y: event.clientY\n        });\n        console.log(\"linking cursor:\", JSON.stringify(linkingCursor));\n    }\n}\nfunction getLinkIdFromPath(event) {\n    for (const i in event.path) {\n        console.log(event.path[i]);\n        if (event.path[i].dataset && event.path[i].dataset.linkId !== undefined)\n            return event.path[i].dataset.linkId;\n    }\n    return undefined;\n}\nfunction handleMouseDown(event) {\n    if (event.button === 2)\n        return;\n    if (event.target == content || event.target == container)\n        isPanning = true;\n    else {\n        console.log(\"clicked something else:\", event.path);\n        const linkId = getLinkIdFromPath(event);\n        console.log(\"link id:\", linkId);\n        if (linkId) {\n            const hoveredLink = $linksStore.find(l => hashLinkExpression(l) == linkId);\n            if (isLinking) {\n                const newLink = {\n                    source: linkingSource.data.target,\n                    target: hoveredLink.data.target,\n                };\n                ad4m.perspective.addLink(perspective.uuid, newLink);\n            }\n            else {\n                if (hoveredLink) {\n                    movingLink = {\n                        author: hoveredLink.author,\n                        timestamp: hoveredLink.timestamp,\n                        data: {\n                            source: hoveredLink.data.source,\n                            predicate: hoveredLink.data.predicate,\n                            target: hoveredLink.data.target,\n                        },\n                        proof: {\n                            key: hoveredLink.proof.key,\n                            signature: hoveredLink.proof.signature\n                        }\n                    };\n                    movingLinkOriginal = JSON.parse(JSON.stringify(movingLink));\n                    isMovingExpression = true;\n                    console.log(\"MOVING\");\n                }\n                else {\n                    console.error(\"Couldn't find link with ID\", linkId);\n                    console.error(\"have links\", $linksStore);\n                }\n            }\n        }\n    }\n}\nfunction handleMouseUp(event) {\n    console.debug(isMovingExpression, movingLink, movingLinkOriginal);\n    if (isMovingExpression && !linkEqual(movingLink, movingLinkOriginal)) {\n        let newLinkObject = JSON.parse(JSON.stringify(movingLink));\n        if (dropMove) {\n            newLinkObject.data.source = dropMoveTarget.data.target;\n        }\n        delete newLinkObject.id;\n        console.debug(\"Updating link:\", JSON.stringify(movingLinkOriginal), JSON.stringify(newLinkObject.data));\n        ad4m.perspective.updateLink(perspective.uuid, movingLinkOriginal, newLinkObject.data);\n    }\n    isPanning = false;\n    isMovingExpression = false;\n    isLinking = false;\n    linkingSource = false;\n}\nfunction contextMenu(event) {\n    isPanning = false;\n    isMovingExpression = false;\n    constructionMenu.open(event.clientX, event.clientY);\n}\nad4m.languages.byFilter(\"expressionUI\").then(expressionUILanguages => {\n    languages = expressionUILanguages;\n});\nasync function commitExpression(lang, content, container) {\n    const exprURL = await ad4m.expression.create(JSON.stringify(content), lang.address);\n    console.log(\"Created new expression:\", exprURL);\n    ad4m.perspective.addLink(perspective.uuid, new Link({ source: 'root', target: exprURL }));\n    container.innerHTML = '';\n}\nasync function createExpression(lang) {\n    console.log(\"Create expression:\", lang, JSON.stringify(lang));\n    if (!constructorIconComponents[lang.name]) {\n        const language = await ad4m.languages.byAddress(lang.address);\n        const code = language.constructorIcon.code;\n        const ConstructorIcon = iconComponentFromString(code, lang.name);\n        constructorIconComponents[lang.name] = ConstructorIcon;\n        customElements.define(lang.name + \"-constructor\", ConstructorIcon);\n    }\n    const container = document.getElementById(\"constructor-container\");\n    container.innerHTML = '';\n    const constructorIcon = new constructorIconComponents[lang.name]();\n    constructorIcon.commitExpression = async (content) => {\n        commitExpression(lang, content, container);\n    };\n    constructorIcon.discard = () => {\n        container.innerHTML = '';\n    };\n    container.appendChild(constructorIcon);\n}\n$: if (perspective) {\n    linksStoreForPerspective(ad4m, perspective).then(store => {\n        linksStore = store;\n    });\n}\nlet expressionContextMenu;\nfunction onExpressionContextMenu(event) {\n    const { expressionURL, mouseEvent, parentLink } = event.detail;\n    expressionContextMenu.open(mouseEvent.clientX, mouseEvent.clientY, expressionURL, parentLink);\n    isPanning = false;\n    isMovingExpression = false;\n}\nfunction onExpressionSwitchHeaderContent(event) {\n    const expression = event.detail;\n    if (iconStates[expression] != 'rotated') {\n        iconStates[expression] = 'rotated';\n    }\n    else {\n        iconStates[expression] = '';\n    }\n    isPanning = false;\n    isMovingExpression = false;\n}\nfunction onDeleteExpression(event) {\n    const expression = event.detail;\n    $linksStore.forEach(l => {\n        if (l.data.target === expression) {\n            console.log(\"deleting expression:\", l);\n            ad4m.perspective.removeLink(perspective.uuid, l);\n        }\n    });\n}\nfunction onLinkExpression(event) {\n    const link = event.detail;\n    isLinking = true;\n    linkingSource = link;\n}\nfunction noop() { }\n</script>\n\n<div \n    on:mousewheel|stopPropagation={noop} \n    on:touchstart|stopPropagation={noop}\n    on:mouseup|stopPropagation={noop}\n>\n\n{#if !perspective || !perspective.uuid}\n    <h1>Loading...</h1>\n{:else}\n\n<div class=\"perspective-container\" \n    on:mousewheel={handleMouseWheel}\n    on:mousemove={handleMouseMove}\n    on:mousedown={handleMouseDown}\n    on:mouseup={handleMouseUp}\n    on:contextmenu={contextMenu}\n    bind:this={container}\n    >\n    <div class=\"perspective-content\" bind:this={content}>\n        <ul class=\"inline\">\n            {#each $linksStore as link}\n                {#if link.data.source === 'root'}\n                    {#if isMovingExpression && movingLink && linkEqual(link, movingLinkOriginal)}\n                    <li class=\"inline expression-list-container\" \n                        style={`position: absolute; transform: translateX(${linkTo2D(movingLink).x}px) translateY(${linkTo2D(movingLink).y}px);`}\n                        data-link-id={hashLinkExpression(link)}\n                        >\n                        <div class=\"drop-move-container\" style={`transform: translateZ(${dropMove ? -2000 : 0}px);`}>\n                            <ExpressionIcon expressionURL={link.data.target} perspectiveUUID={perspective.uuid}/>\n                        </div>\n                    </li>\n                    {:else}\n                    <li class=\"inline expression-list-container\" \n                        style={`position: absolute; transform: translateX(${linkTo2D(link).x}px) translateY(${linkTo2D(link).y}px);`}\n                        data-link-id={hashLinkExpression(link)}\n                        >\n                        <ExpressionIcon\n                            expressionURL={link.data.target}\n                            parentLink={link}\n                            perspectiveUUID={perspective.uuid}\n                            on:context-menu={onExpressionContextMenu} \n                            rotated={iconStates[link.data.target] === 'rotated'}\n                            selected={linkingSource?.data?.target === link.data.target}>\n                        </ExpressionIcon>\n                    </li>\n                    {/if}\n                {/if}\n            {/each}\n        </ul>        \n        <div id=\"constructor-container\"></div>\n\n        {#if isLinking && linkingSource && linkingCursor.x && linkingCursor.y}\n            <svg class=\"link-path\" width=\"100000\" height=\"100000\">\n                <path d={`M${linkTo2D(linkingSource).x+10000+400},${linkTo2D(linkingSource).y+10000} L${linkingCursor.x-5+10000},${linkingCursor.y-5+10000} Z`} stroke=\"red\" stroke-width=\"3\" fill=\"none\"/>\n            </svg>\n        {/if}\n    </div>\n</div>\n\n<ConstructionMenu bind:this={constructionMenu} \n    languages={languages} \n    languageIcons={languageIcons}\n    on:language-clicked={({detail: lang}) => createExpression(lang)}\n></ConstructionMenu>\n<ExpressionContextMenu bind:this={expressionContextMenu}\n    on:switch-header-content={onExpressionSwitchHeaderContent}\n    on:delete={onDeleteExpression}\n    on:link={onLinkExpression}\n></ExpressionContextMenu>\n\n{/if}\n\n</div>\n<style>\n    .perspective-container {\n        position: absolute;\n        top: 30px;\n        left: 0;\n        right: 0;\n        height: 100%;\n        perspective: 1000px;\n        transform-style: preserve-3d;\n    }\n\n    .debug {\n        position: fixed;\n        width: 100%;\n        z-index: -10;\n    }\n\n    .inline {\n        display: inline;\n        transform-style: preserve-3d;\n    }\n\n    .link-path {\n        position: absolute;\n        top: 0;\n        left: 0;\n        transform: translateX(-10000px) translateY(-10000px);\n    }\n\n    .drop-move-container {\n        transition: transform 0.5s;\n    }\n</style>",
    "<script lang=\"ts\">import { getContext, createEventDispatcher } from \"svelte\";\nimport { Literal, parseExprUrl } from '@perspect3vism/ad4m';\nimport ExpressionIcon from './ExpressionIcon.svelte';\nimport ExpressionContextMenu from \"./ExpressionContextMenu.svelte\";\nimport { linksStoreForPerspective } from \"./LinksStore\";\nimport { Network } from 'vis-network/esnext/index';\nimport VisGraph from \"./VisGraph\";\nimport LinkContextMenu from \"./LinkContextMenu.svelte\";\nimport { debounce } from \"./uiUtils\";\nexport let perspective;\nexport let uuid;\nconst ad4m = getContext('ad4mClient');\nconst zumly = getContext('zumly');\nconst dispatch = createEventDispatcher();\nconst POSITION_PREDICATE = 'perspect3ve://2d_position';\nlet agentDID;\nad4m.agent.me().then(agent => {\n    agentDID = agent.did;\n});\nif (!perspective && uuid) {\n    (async () => {\n        perspective = await ad4m.perspective.byUUID(uuid);\n    })();\n}\nif (!uuid && perspective) {\n    uuid = perspective.uuid;\n}\n//@ts-ignore\nad4m.perspective.addPerspectiveUpdatedListener(async (p) => {\n    //@ts-ignore\n    if (p.uuid == perspective.uuid || p.uuid == uuid) {\n        //@ts-ignore\n        perspective = await ad4m.perspective.byUUID(perspective.uuid);\n    }\n});\nasync function update() {\n    console.log(\"UPDATE\");\n    await graphFromPerspective(perspective);\n    network.setData({ nodes: graph.nodes, edges: graph.edges });\n    getNodePositions();\n}\nlet network;\nlet networkDiv;\nlet nodePositions;\nlet graph;\nlet scale = 1;\n$: if (perspective && networkDiv) {\n    init();\n}\nasync function init() {\n    await graphFromPerspective(perspective);\n    await createNetwork(networkDiv);\n}\nasync function graphFromPerspective(p) {\n    graph = new VisGraph(p);\n    await graph.load();\n}\nasync function createNetwork(container) {\n    network = new Network(container, { nodes: graph.nodes, edges: graph.edges }, {\n        groups: {\n            linkLanguageLink: { color: { background: '#FF3366' } },\n            metaLinks: { color: { background: '#33A1FF' } }\n        },\n        nodes: {\n            borderWidth: 1,\n            shape: 'box',\n            color: 'teal'\n        },\n        edges: {\n            color: 'black',\n            arrows: {\n                to: {\n                    enabled: true,\n                }\n            },\n            arrowStrikethrough: false,\n            smooth: false,\n        },\n        physics: {\n            hierarchicalRepulsion: {\n                centralGravity: 0,\n                springLength: 620,\n                springConstant: 0.005,\n                nodeDistance: 310,\n                avoidOverlap: 0.15\n            },\n            minVelocity: 0.75,\n            solver: \"hierarchicalRepulsion\"\n        },\n        layout: {\n            randomSeed: 2\n        }\n    });\n    for (let event of ['dragging', 'stabilizationProgress', 'stabilized', 'resize', 'afterDrawing']) {\n        network.on(event, () => {\n            getNodePositions();\n        });\n    }\n    for (let event of ['stabilized']) {\n        network.on(event, () => {\n            debouncedWriteNodePositions();\n        });\n    }\n    network.on('zoom', (params) => {\n        scale = params.scale;\n        getNodePositions();\n    });\n    network.on('oncontext', params => {\n        if (params.nodes.length > 0) {\n            let url = params.nodes[0];\n            let pos = params.pointer.DOM;\n            expressionContextMenu.open(pos.x, pos.y, url);\n        }\n        else if (params.edges.length > 0) {\n            let edgeId = params.edges[0];\n            //@ts-ignore\n            let { from, to, label, link } = graph.edges.find(e => e.id === edgeId);\n            console.log('oncontext link:', link);\n            let pos = params.pointer.DOM;\n            if (link)\n                linkContextMenu.open(pos.x, pos.y, link);\n        }\n    });\n    network.on('click', params => {\n        if (params.nodes.length > 0) {\n            let url = params.nodes[0];\n            dispatch('expressionClicked', url);\n        }\n        else {\n            dispatch('non-expressionClicked');\n        }\n    });\n    getNodePositions();\n}\nfunction getNodePositions() {\n    nodePositions = [];\n    for (let node of graph.nodes) {\n        nodePositions.push({\n            id: node.id,\n            label: node.label,\n            pos: network.canvasToDOM(network.getPosition(node.id)),\n        });\n    }\n}\nfunction writeNodePositions() {\n    for (let node of graph.nodes) {\n        const pos = network.getPosition(node.id);\n        const incomingEdges = graph.edges.filter(e => e.label == POSITION_PREDICATE && e.to == node.id);\n        if (incomingEdges.length == 0) {\n            // only store position for non-position nodes\n            perspective.setSingleTarget({\n                source: node.id,\n                predicate: POSITION_PREDICATE,\n                target: Literal.from(pos).toUrl()\n            });\n        }\n    }\n    console.debug(\"Node positions saved.\");\n}\nconst debouncedWriteNodePositions = debounce(writeNodePositions, 1000);\nlet linksStore;\nlet expressionContextMenu;\nlet linkContextMenu;\nlet iconStates = {};\n$: if (perspective) {\n    linksStoreForPerspective(ad4m, perspective).then(store => {\n        linksStore = store;\n    });\n    const updateIfNotPositionLink = (link) => {\n        if (link.author == agentDID && link.data.predicate == POSITION_PREDICATE)\n            return;\n        update();\n    };\n    perspective.addListener('link-added', updateIfNotPositionLink);\n    perspective.addListener('link-removed', updateIfNotPositionLink);\n}\nfunction onExpressionContextMenu(event) {\n    const { expressionURL, mouseEvent, parentLink } = event.detail;\n    expressionContextMenu.open(mouseEvent.clientX, mouseEvent.clientY, expressionURL, parentLink);\n}\nfunction onExpressionSwitchHeaderContent(event) {\n    const expression = event.detail;\n    if (iconStates[expression] != 'rotated') {\n        iconStates[expression] = 'rotated';\n    }\n    else {\n        iconStates[expression] = '';\n    }\n}\nfunction onDeleteExpression(event) {\n    const expression = event.detail;\n    $linksStore.forEach(l => {\n        if (l.data.target === expression || l.data.source === expression) {\n            console.log(\"deleting expression:\", l);\n            ad4m.perspective.removeLink(perspective.uuid, l);\n        }\n    });\n}\nfunction onDeleteLink(event) {\n    const link = event.detail;\n    perspective.remove(link);\n}\nfunction shouldRenderExpressionIcon(label) {\n    if (typeof label != 'string' || label.startsWith('literal://'))\n        return false;\n    let isValidUrl;\n    try {\n        const ref = parseExprUrl(label);\n        isValidUrl = true;\n    }\n    catch (e) {\n        isValidUrl = false;\n    }\n    return isValidUrl;\n}\nlet perspectives;\nasync function getPerspectives() {\n    perspectives = await ad4m.perspective.all();\n}\ngetPerspectives();\nfunction uuidForNeighbourhood(url) {\n    let p = perspectives.find(p => p.sharedUrl == url);\n    if (p)\n        return p.uuid;\n    else\n        return null;\n}\nfunction noop() { }\nfunction triggerZumly(e) {\n    //@ts-ignore\n    zumly.onZoom(e);\n}\n</script>\n\n<div \n    on:mousewheel|stopPropagation={noop} \n    on:touchstart|stopPropagation={noop}\n>\n\n{#if !perspective || !perspective.uuid}\n    <h1>Loading...</h1>\n{:else}\n\n<div class=\"network-wrapper\">\n    {#if nodePositions}\n        <div class=\"expression-icons\">\n            {#each nodePositions as node}\n                {#if shouldRenderExpressionIcon(node.id)}\n                    <div class=\"expression-icon-wrapper\" style={\n                        `top: ${node.pos.y+(30*scale)}px; \n                        left: ${node.pos.x}px;\n                        transform: scale(${scale*0.8});\n                        `}>\n                        {#if node.id.startsWith('neighbourhood://') && uuidForNeighbourhood(node.url)}\n                            <div class=\"zoom-me nh-zoom\" \n                                data-to=\"PerspectiveWrapper\" \n                                data-uuid={uuidForNeighbourhood(node.id)}\n                                on:mouseup={(e)=>triggerZumly(e)}\n                            >\n                                <h1>{node.id}</h1>\n                            </div>\n                        {:else}\n                            <ExpressionIcon \n                                expressionURL={node.id} \n                                perspectiveUUID={perspective.uuid}\n                                on:context-menu={onExpressionContextMenu} \n                                rotated={iconStates[node.id] === 'rotated'}\n                            />\n                        {/if}\n                    </div>\n                {/if}\n            {/each}\n        </div>\n    {/if}\n    <div class=\"network\" bind:this={networkDiv}>\n    </div>\n</div>\n\n<ExpressionContextMenu bind:this={expressionContextMenu}\n    on:switch-header-content={onExpressionSwitchHeaderContent}\n    on:delete={onDeleteExpression}\n    on:link={(e)=>{dispatch('link-from-expression', e.detail)}}\n    on:add-child={(e)=>dispatch('create-target-for-expression', e.detail)}\n></ExpressionContextMenu>\n<LinkContextMenu bind:this={linkContextMenu}\n    on:delete={onDeleteLink}\n>\n</LinkContextMenu>\n\n{/if}\n\n</div>\n<style>\n    .network-wrapper {\n        position: absolute;\n        top: 30px;\n        left: 0;\n        right: 0;\n        height: 100%;\n    }\n\n    .network {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        height: 100%;\n        z-index: 1;\n    }\n\n    .expression-icons {\n        z-index: 2;\n    }\n\n    .expression-icon-wrapper {\n        position: absolute;\n        z-index: 2;\n    }\n\n    .nh-zoom {\n        width: 300px;\n        height: 200px;\n        background-color: red;\n        z-index: 1;\n    }\n</style>",
    "<script lang=\"ts\">export let perspective;\nexport let perspectiveId;\nimport Textfield, { Input } from '@smui/textfield';\nimport HelperText from '@smui/textfield/helper-text/index';\nimport FloatingLabel from '@smui/floating-label';\nimport LineRipple from '@smui/line-ripple';\nimport Button, { Label } from '@smui/button';\nimport Select, { Option } from '@smui/select';\nimport { getContext, createEventDispatcher } from 'svelte';\nimport DataTable, { Body, Row, Cell } from '@smui/data-table';\nimport { v4 as uuid } from 'uuid';\nimport { Circle3 } from 'svelte-loading-spinners';\nimport { Perspective } from '@perspect3vism/ad4m';\nconst ad4m = getContext('ad4mClient');\nlet showPublishPanel = false;\nlet publishLinkLanguage = '';\nlet publishName = '';\nlet publishDescription = '';\nlet publishUUID = uuid();\nlet isPublishing = false;\nlet linkLanguages = [];\nlet publishingStatus = '';\nlet publishedLinkLanguage;\nlet perspectiveTemp = { name: '<loading>' };\nconst dispatch = createEventDispatcher();\nasync function init() {\n    const addresses = await ad4m.runtime.knownLinkLanguageTemplates();\n    linkLanguages = [];\n    for (const adr of addresses) {\n        try {\n            linkLanguages.push(await ad4m.languages.meta(adr));\n        }\n        catch (e) {\n            console.warn(e);\n        }\n    }\n    console.log(\"LinkLanguages:\", linkLanguages);\n    update();\n}\ninit();\nasync function update() {\n    console.log(\"update:\", perspective, perspectiveId);\n    const uuid = perspective ? perspective.uuid : perspectiveId;\n    if (!uuid)\n        return;\n    perspective = await ad4m.perspective.byUUID(uuid);\n    perspectiveTemp = JSON.parse(JSON.stringify(perspective));\n    perspectiveTemp.name = perspective.name;\n    if (perspective.sharedUrl) {\n        let nh = await ad4m.expression.get(perspective.sharedUrl);\n        nh = JSON.parse(nh.data);\n        console.log('NH:', nh);\n        const linkLanguageMeta = await ad4m.languages.meta(nh.linkLanguage);\n        console.log(linkLanguageMeta);\n        publishedLinkLanguage = linkLanguageMeta;\n    }\n}\nad4m.perspective.addPerspectiveUpdatedListener(update);\nasync function save() {\n    await ad4m.perspective.update(perspective.uuid, perspectiveTemp.name);\n    dispatch('submit', perspective.uuid);\n}\nfunction cancel() {\n    dispatch('cancel');\n}\nasync function publish() {\n    isPublishing = true;\n    publishingStatus = \"Cloning LinkLanguage...\";\n    console.log(\"publishLinkLanguage:\", publishLinkLanguage);\n    const uniqueLinkLanguage = await ad4m.languages.applyTemplateAndPublish(publishLinkLanguage, JSON.stringify({ uuid: publishUUID, name: `Social-Context LinkLanguage for NH: ${publishName}` }));\n    publishingStatus = `LinkLanguage cloned with address: ${uniqueLinkLanguage.address}!\\nPublishing Neighbourhood...`;\n    // TODO: add name, type (or linkLanguage name) and description to meta perspective\n    const meta = new Perspective();\n    const neighbourhoodUrl = await ad4m.neighbourhood.publishFromPerspective(perspective.uuid, uniqueLinkLanguage.address, meta);\n    publishingStatus = 'Done!';\n    isPublishing = false;\n    showPublishPanel = false;\n}\nfunction randomizeUuid() {\n    publishUUID = uuid();\n}\n</script>\n\n{#if perspective}\n<div class=\"perspective-settings-container\">\n    <DataTable> \n        <Body>\n            <Row>\n                <Cell>Name:</Cell>\n                <Cell><Textfield bind:value={perspective.name} label=\"Name\" /></Cell>\n            </Row>\n            <Row>\n                <Cell>Sharing:</Cell>\n                {#if perspective.sharedUrl}\n                    <Cell>\n                        <h3>This Perspective is shared</h3>\n                        <div>\n                            <span>{perspective.sharedUrl}</span>\n                        </div>\n                        {#if publishedLinkLanguage}\n                        <div>\n                            <h4>Link Language</h4>\n                            <div>\n                                <span>Name:</span>\n                                <span>{publishedLinkLanguage.name}</span>\n                            </div>\n                            <div>\n                                <span>Description:</span>\n                                <span>{publishedLinkLanguage.description}</span>\n                            </div>\n                            <div>\n                                <span>Address:</span>\n                                <span>{publishedLinkLanguage.address}</span>\n                            </div>\n                            {#if publishedLinkLanguage.templated}\n                            <div>\n                                <span>Template source:</span>\n                                <span>{publishedLinkLanguage.templateSourceLanguageAddress}</span>\n                            </div>\n                            <div>\n                                <span>Template parameters:</span>\n                                <span>{publishedLinkLanguage.templateAppliedParams}</span>\n                            </div>\n                            {/if}\n                            {#if publishedLinkLanguage.sourceCodeLink}\n                            <div>\n                                <span>Source code link:</span>\n                                <span>{publishedLinkLanguage.sourceCodeLink}</span>\n                            </div>\n                            {/if}\n                        </div>\n                        {/if}\n                        <!--\n                        <div>\n                            <span>Name: </span>\n                            <span>{perspective.sharedPerspective.name}</span>\n                        </div>\n                        <div>\n                            <span>Description: </span>\n                            <span>{perspective.sharedPerspective.description}</span>\n                        </div>\n                        <div>\n                            <span>Type: </span>\n                            <span>{perspective.sharedPerspective.type}</span>\n                        </div>\n                        -->\n                    </Cell>\n                {:else}\n                    <Cell>\n                        {#if showPublishPanel}\n                            <h3>Publish as</h3>\n                            <!--\n                            <Textfield fullwidth lineRipple={false} label=\"Name\">\n                                <Input bind:value={publishName} id=\"input-name\" aria-controls=\"name-helper-text\" aria-describedby=\"name-helper-text\" />\n                                <FloatingLabel for=\"input-name\">Name</FloatingLabel>\n                                <LineRipple />\n                            </Textfield>\n                            <HelperText id=\"name-helper-text\">Name of the shared Perspective others will see</HelperText>\n                            \n                            <Textfield fullwidth lineRipple={false} label=\"Description\">\n                                <Input bind:value={publishDescription} id=\"input-desc\" aria-controls=\"desc-helper-text\" aria-describedby=\"desc-helper-text\" />\n                                <FloatingLabel for=\"input-desc\">Description</FloatingLabel>\n                                <LineRipple />\n                            </Textfield>\n                            <HelperText id=\"desc-helper-text\">Text describing the shared Perspective</HelperText>\n                            -->\n                            <Select bind:value={publishLinkLanguage} label=\"Link Language\">\n                                {#each linkLanguages as linkLanguage}\n                                    <Option value={linkLanguage.address} selected={false}>{linkLanguage.name}</Option>\n                                {/each}\n                            </Select>\n\n                            <Textfield fullwidth lineRipple={false} label=\"UUID for LinkLanguage clone\">\n                                <Input bind:value={publishUUID} id=\"input-uuid\" aria-controls=\"uuid-helper-text\" aria-describedby=\"uuid-helper-text\" />\n                                <FloatingLabel for=\"input-uuid\">UUID for LinkLanguage clone</FloatingLabel>\n                                <LineRipple />\n                            </Textfield>\n                            <HelperText id=\"uuid-helper-text\">An arbitrary string that makes this LinkLanguage clone unique</HelperText>\n                            <Button variant=\"raised\" on:click={randomizeUuid}>\n                                Randomize\n                            </Button>\n\n\n\n                            <p>\n                                {#if isPublishing}\n                                    {publishingStatus} <Circle3></Circle3>\n                                {/if}\n                            </p>\n\n                            <Button variant=\"raised\" on:click={publish}>\n                                Publish!\n                            </Button>\n                            <Button variant=\"outlined\" on:click={() => showPublishPanel=false}>\n                                Cancel\n                            </Button>\n                        {:else}\n                            <h3>This Perspective is private</h3>\n                            <p></p>\n                            <Button variant=\"raised\" on:click={() => showPublishPanel=true}>\n                                Publish Perspective...\n                            </Button>\n                        {/if}\n                    </Cell>\n                {/if}\n            </Row>\n        </Body>\n    </DataTable>\n</div>\n\n<Button variant=\"raised\" on:click={save} style=\"margin: 40px; padding: 25px;\">\n    <Label>Save</Label>\n</Button>\n<!--\n<Button variant=\"outlined\" on:click={cancel}>\n    <Label>Cancel</Label>\n</Button>\n-->\n\n{/if}\n<style>\n    .perspective-settings-container {\n        float: left;\n    }\n</style>",
    "<script lang=\"ts\">export let perspective;\nlet prompt = `|${perspective.name}>`;\nlet lines = [];\nlet input = '';\nlet historyCounter = -1;\nlet unfinishedLine = '';\nlet shellContent;\nasync function keypress(event) {\n    console.log(event.key);\n    switch (event.key) {\n        case \"Enter\":\n            event.preventDefault();\n            await evalProlog();\n            input = '';\n            historyCounter = -1;\n            shellContent.scrollTo(0, shellContent.scrollHeight);\n            break;\n        case \"ArrowUp\":\n            event.preventDefault();\n            console.log(\"up\");\n            if (historyCounter < lines.length - 1) {\n                if (historyCounter === 0) {\n                    unfinishedLine = input;\n                }\n                historyCounter++;\n                let historyLine = lines[lines.length - 1 - historyCounter];\n                input = historyLine.input;\n            }\n            break;\n        case \"ArrowDown\":\n            event.preventDefault();\n            console.log(\"down\");\n            if (historyCounter > 0) {\n                let historyLine = lines[lines.length - 1 - historyCounter];\n                historyCounter--;\n                input = historyLine.input;\n            }\n            else {\n                input = unfinishedLine;\n                historyCounter = -1;\n            }\n            break;\n    }\n}\nasync function evalProlog() {\n    let results;\n    let errors;\n    try {\n        //@ts-ignore\n        results = await perspective.infer(input);\n    }\n    catch (e) {\n        errors = e;\n    }\n    if (typeof results == 'object')\n        results = results.map(r => Object.entries(r));\n    lines = [...lines, {\n            input: JSON.parse(JSON.stringify(input)),\n            results,\n            errors\n        }];\n}\n</script>\n\n<div class=\"perspective-shell-content\" \n    bind:this={shellContent}\n    on:keypress|stopPropagation\n    on:keydown|stopPropagation\n>\n    {#each lines as line}\n        <div class=\"line\">\n            <div class=\"prompt-line\">\n                <span class=\"prompt\">{prompt}</span>\n                <span class=\"prompt-input\">{line.input}</span>    \n            </div>\n            {#if line.errors}\n                {#each line.errors as error}\n                    <span class=\"error\">{error.message}</span>\n                {/each}\n            {:else}\n                {#if line.results === false}\n                    <span class=\"false\">false</span>\n                {:else if line.results.length}\n                    <ul>\n                    {#each line.results as result}\n                        <li>\n                        {#each result as [key, value]}\n                            <span class=\"variable\">{key}</span>: <span class=\"match\">{value}</span><br>\n                        {/each}\n                        </li>\n                    {/each}\n                    </ul>\n                {:else}\n                    <span class=\"true\">true</span>\n                {/if}\n            {/if}\n        </div>\n    {/each}\n    <div class=\"new-line\">\n        <span class=\"prompt\">{prompt}</span>\n        <input class=\"prompt-input\" bind:value={input} \n            on:keypress|stopPropagation={keypress} \n            on:keydown|stopPropagation={keypress}\n            on:keyup|stopPropagation\n        >\n    </div>\n</div>\n\n<style>\n    .perspective-shell-content {\n        color: white;\n        background-color: black;\n    }\n\n    .prompt-line {\n        display: flex;\n        width: 100%;\n    }\n\n    .new-line {\n        display: flex;\n        width: 100%;\n    }\n\n    .prompt {\n        float: left;\n    }\n\n    .prompt-input {\n        flex-grow: 1;\n        padding: 0 5px;\n        color: white;\n        background-color: black;\n        border: none;\n        outline: none;\n    }\n\n    .error {\n        color: red;\n    }\n\n    .variable {\n        color: rgb(113, 211, 241);\n    }\n\n    .match {\n        font-size: 12px;\n        font-style: italic;\n    }\n\n    .false {\n        color: red;\n    }\n\n    .true {\n        color: green;\n    }\n</style>",
    "<script lang=\"ts\">import { getContext } from \"svelte\";\nimport { LinkQuery, Literal } from \"@perspect3vism/ad4m\";\nimport Tab, { Icon, Label } from '@smui/tab';\nimport TabBar from '@smui/tab-bar';\nimport './Perspective.svelte';\nimport PerspectiveGraph from \"./PerspectiveGraph.svelte\";\nimport ExpressionBrowser from './ExpressionBrowser.svelte';\nimport PerspectiveSettings from './PerspectiveSettings.svelte';\nimport AgentProfileSettings from './AgentProfileSettings.svelte';\nimport Button, { Label as ButtonLabel, Icon as ButtonIcon } from '@smui/button';\nimport IconButton from '@smui/icon-button';\nimport PerspectiveShell from \"./PerspectiveShell.svelte\";\nimport LinkWizard from \"./LinkWizard.svelte\";\nimport PrologExpressionView from \"./PrologExpressionView.svelte\";\nimport ActionsView from \"./ActionsView.svelte\";\nimport { debounce } from \"./uiUtils\";\nimport ConstructionPalette from \"./ConstructionPalette.svelte\";\nimport { executeCustomAction } from \"./executeCustomAction\";\nexport let uuid;\nexport let settings;\nexport let agentprofile;\nconst ad4m = getContext('ad4mClient');\nlet perspective;\nad4m.perspective.byUUID(uuid).then((p) => {\n    perspective = p;\n    const debouncedUpdateToolbar = debounce(updateToolbar, 150);\n    perspective.addListener(\"link-added\", debouncedUpdateToolbar);\n    perspective.addListener(\"link-removed\", debouncedUpdateToolbar);\n});\nlet showFooterPanel = false;\nlet showSidePanel = false;\nlet showLinkWizard = false;\nlet linkWizard;\nlet newLinkSource;\nlet newLinkPredicate;\nlet newLinkTarget;\nlet selectedExpression;\nlet customActions = [];\nlet sdnaFlows = [];\nlet sdnaFlowActions = {};\nlet sdnaFlowStates = {};\nfunction openLinkWizard() {\n    linkWizard.reset();\n    showLinkWizard = true;\n}\nlet pickMode = false;\nlet pickTarget = '';\nfunction pickExpression(event) {\n    pickMode = true;\n    pickTarget = event.detail;\n}\nfunction expressionClicked(event) {\n    let url = event.detail;\n    if (pickMode) {\n        pickMode = false;\n        switch (pickTarget) {\n            case 'source':\n                linkWizard.source = url;\n                break;\n            case 'predicate':\n                linkWizard.predicate = url;\n                break;\n            case 'target':\n                linkWizard.target = url;\n                break;\n        }\n    }\n    else {\n        selectedExpression = url;\n    }\n}\nfunction nonExpressionClicked(event) {\n    selectedExpression = '';\n}\nfunction updateToolbar() {\n    console.log(\"UPDATE TOOLBAR\");\n    updateCustomActions();\n    updateSDNA();\n}\n$: if (selectedExpression || !selectedExpression) {\n    updateToolbar();\n}\nasync function updateSDNA() {\n    if (!selectedExpression) {\n        sdnaFlowActions = {};\n        sdnaFlows = [];\n        sdnaFlowStates = {};\n        return;\n    }\n    try {\n        sdnaFlows = await perspective.availableFlows(selectedExpression);\n        console.debug(\"sdnaFlows:\", sdnaFlows);\n        for (let flow of sdnaFlows) {\n            try {\n                sdnaFlowActions[flow] = await perspective.flowActions(flow, selectedExpression);\n                console.debug(\"sdnaFlowActions[flow]:\", sdnaFlowActions[flow]);\n            }\n            catch (e) {\n                sdnaFlowActions[flow] = [];\n            }\n            try {\n                sdnaFlowStates[flow] = await perspective.flowState(flow, selectedExpression);\n                console.debug(\"sdnaFlowStates[flow] :\", sdnaFlowStates[flow]);\n            }\n            catch (e) {\n                sdnaFlowStates[flow] = NaN;\n            }\n        }\n    }\n    catch (e) {\n        console.debug(\"No SDNA flows defined:\", e);\n    }\n}\nasync function updateCustomActions() {\n    customActions = [];\n    let results;\n    try {\n        results = await perspective.infer(`customAction(X, \"${selectedExpression}\")`);\n    }\n    catch (e) {\n        console.debug(\"No custom actions defined:\", e);\n    }\n    if (results) {\n        for (let result of results) {\n            let actionUrl = result.X;\n            if (actionUrl.startsWith('ad4m://expression_action:')) {\n                let name = actionUrl.substring(25);\n                let [body] = await perspective.get(new LinkQuery({ source: actionUrl, predicate: 'ad4m://has_body' }));\n                if (body) {\n                    let code = Literal.fromUrl(body.data.target).get();\n                    customActions = [...customActions, { name, code }];\n                }\n            }\n        }\n    }\n}\nif (typeof settings === 'string')\n    settings = JSON.parse(settings);\nlet tabs = [\n    { k: 1, label: 'Expression Browser', icon: 'web' },\n    { k: 4, label: 'Social DNA', icon: 'engineering' },\n    { k: 5, label: 'Actions', icon: 'engineering' }\n];\nlet active = tabs[0];\nif (settings) {\n    tabs.push({ k: 2, label: 'Perspective Settings', icon: 'settings' });\n}\nif (agentprofile) {\n    tabs.push({ k: 3, label: 'Agent Wizard', icon: 'account_circle' });\n    active = tabs[tabs.length - 1];\n    showSidePanel = true;\n}\nasync function publishAsAgentPerspective() {\n    const snapshot = await perspective.snapshot();\n    console.log(\"Publishing perspective as agent perspective: \", snapshot);\n    await ad4m.agent.updatePublicPerspective(snapshot);\n}\nfunction noop() { }\nlet me;\nlet did;\nasync function init() {\n    me = await ad4m.agent.me();\n    did = me.did;\n}\ninit();\n</script>\n\n<div class=\"perspective-wrapper\"\n    on:mousewheel|stopPropagation={noop} \n    on:touchstart|stopPropagation={noop}\n    on:mouseup|stopPropagation={noop}\n    on:keydown|stopPropagation\n    on:keyup|stopPropagation\n    on:keypress|stopPropagation\n>\n    <div class=\"header\">\n        <h1>\n            {#if agentprofile}\n                Your Agent Profile\n            {:else}\n                {perspective?.name}\n            {/if}\n        </h1>\n        {#if agentprofile && me}\n            ({me.did})\n        {/if}\n    </div>\n\n    {#if perspective}\n        <div class:picker={pickMode}>\n            <PerspectiveGraph \n                perspective={perspective}\n                on:expressionClicked={expressionClicked}\n                on:non-expressionClicked={nonExpressionClicked}\n                on:link-from-expression={(e)=>{\n                    newLinkSource = e.detail\n                    showLinkWizard = true\n                    pickMode = true\n                    pickTarget = 'target'\n                }}\n                on:create-target-for-expression={(e)=>{\n                    newLinkSource = e.detail\n                    showLinkWizard = true\n                    linkWizard.createExpression('target')\n                }}\n            ></PerspectiveGraph>\n        </div>\n    {:else}\n        <h2>Loading...</h2>\n    {/if}\n\n    {#if perspective}\n    <div class=\"palette\">\n        <ConstructionPalette perspective={perspective}></ConstructionPalette>\n    </div>\n    {/if}\n    \n\n    <div class=\"side-panel\" style={`width: ${showSidePanel ? '400px' : '0'};`}>\n        <div class=\"side-panel-handle\">\n            <IconButton class=\"material-icons\" on:click={() => showSidePanel = !showSidePanel}>\n                {showSidePanel ? 'chevron_right' : 'chevron_left'}\n            </IconButton>\n        </div>\n        <div class=\"side-header\">\n            <TabBar {tabs} let:tab key={(tab) => tab.k} bind:active style=\"display: inline;\">\n                <Tab\n                    {tab}\n                    stacked={true}\n                    indicatorSpanOnlyContent={true}\n                    tabIndicator$transition=\"fade\"\n                    >\n                    <Icon class=\"material-icons\">{tab.icon}</Icon>\n                    <Label>{tab.label}</Label>\n                </Tab>\n            </TabBar>\n        </div>\n\n        <div class=\"side-content\">\n            {#if active.k === 1 }\n                <ExpressionBrowser></ExpressionBrowser>\n            {:else if active.k === 2 }\n                {#if uuid}\n                    <PerspectiveSettings perspectiveId={uuid}>\n                    </PerspectiveSettings>\n                {/if}\n            {:else if active.k === 3 }\n                {#if showSidePanel}\n                    <AgentProfileSettings \n                        did={did}\n                        agentPerspective={perspective}\n                    ></AgentProfileSettings>\n                {/if}\n            {:else if active.k === 4 }\n                {#if perspective}    \n                    <PrologExpressionView perspective={perspective}>\n                    </PrologExpressionView>\n                {/if}\n            {:else if active.k === 5 }\n                {#if perspective}    \n                    <ActionsView perspective={perspective}>\n                    </ActionsView>\n                {/if}\n            {/if}\n        </div>\n    </div>\n\n    <div class=\"footer-panel\" style={`height: ${showFooterPanel ? '200px' : '50px'};`}>\n        {#if perspective}\n            <div class=\"invisible\" class:visible={showLinkWizard}>\n                <LinkWizard \n                    bind:this={linkWizard}\n                    bind:source={newLinkSource}\n                    bind:predicate={newLinkPredicate}\n                    bind:target={newLinkTarget}\n                    on:cancel={()=>{showLinkWizard=false; pickMode=false;}}\n                    on:ok={()=>{showLinkWizard=false; pickMode=false;}}\n                    on:pick={pickExpression}\n                    perspective={perspective}\n                >\n                </LinkWizard>\n            </div>\n        {/if}\n        {#each sdnaFlows as flow}\n            <div class=\"sdna-panel\">\n                <span class=\"sdna-header\">\n                    <span class=\"material-icons\">handshake</span>\n                    {flow}\n                </span>\n                {#if !isNaN(sdnaFlowStates[flow])}\n                    <span class=\"sdna-state\">{sdnaFlowStates[flow]*100}%</span>\n                {:else}\n                    <Button variant=\"raised\" on:click={()=>perspective.startFlow(flow, selectedExpression)}>\n                        <ButtonIcon class=\"material-icons\">add</ButtonIcon>\n                    </Button>                    \n                {/if}\n                <span class=\"sdna-buttons\">\n                    {#if sdnaFlowActions[flow]}\n                        {#each sdnaFlowActions[flow] as action}\n                            <Button variant=\"raised\" on:click={()=>perspective.runFlowAction(flow, selectedExpression, action)}>\n                                <ButtonLabel>{action}</ButtonLabel>\n                            </Button>    \n                        {/each}\n                    {/if}\n                </span>\n            </div>\n        {/each}\n        <div class=\"footer-header\">\n            <span class=\"toolbar\">\n                <IconButton class=\"material-icons\" on:click={() => showFooterPanel = !showFooterPanel}>\n                    {showFooterPanel ? 'expand_more' : 'expand_less'}\n                </IconButton>\n            </span>\n            <span class=\"footer-title\">\n                REPL\n            </span>\n            <span class=\"tool-buttons\">\n                {#each customActions as action}\n                    <Button variant=\"raised\" on:click={()=>executeCustomAction(action.code, selectedExpression, perspective)}>\n                        <ButtonLabel>{action.name}</ButtonLabel>\n                    </Button>    \n                {/each}\n                <Button variant=\"raised\" on:click={openLinkWizard}>\n                    <ButtonIcon class=\"material-icons\">add</ButtonIcon>\n                    <ButtonLabel>Add Link/Expression</ButtonLabel>\n                </Button>\n                {#if agentprofile}\n                    <Button variant=\"raised\" on:click={publishAsAgentPerspective}>\n                        <ButtonLabel>Publish Profile</ButtonLabel>\n                    </Button>\n                {/if}\n            </span>\n        </div>\n        \n        <div class=\"footer-content\">\n            {#if perspective}\n                <PerspectiveShell perspective={perspective}></PerspectiveShell>\n            {/if}\n        </div>\n    </div>\n\n</div>\n\n<style>\n    h1 {\n        margin: 5px 20px;\n        display: inline;\n    }\n\n    .header {\n        position: absolute;\n        left: 0;\n        top: 0;\n        right: 0;\n        height: 50px;\n        background-color: #44aaee6b;\n    }\n\n    .perspective-wrapper {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background-color: #e1f6f7db;\n        padding: 20px;\n    }\n\n    .footer-panel {\n        position: absolute;\n        height: 200px;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        transition: height 0.5s;\n        z-index: 10;\n    }\n\n    .footer-header { \n        position: relative;\n        height: 42px; \n        background-color: #44aaee6b;\n    }\n\n    .sdna-panel {\n        height: 42px; \n        margin-top: -42px;\n        padding: 10px 0 0 15px;\n        background-color: #44eeda6b;\n    }\n\n    .sdna-header {\n        font-weight: bold;\n        font-size: 19px;\n        margin-right: 4px;\n    } \n\n    .footer-title {\n        margin-left: 50px;\n        line-height: 50px;\n    }\n\n    .tool-buttons {\n        position: absolute; \n        right: 0; \n        top: 2px;\n    }\n\n    .toolbar {\n        position: absolute;\n        left: 0;\n        top: 0;\n        height: 50px;\n    }\n\n    .footer-content {\n        background-color: black;\n        height: 160px;\n        overflow-x: scroll;\n        padding-left: 10px\n    }\n\n    .side-panel {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: 400px;\n        padding-left: 50px;\n        transition: width 0.5s;\n        background-color: white;\n        overflow-x: hidden;\n        z-index: 10;\n    }\n\n    .side-panel-handle {\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        width: 50px;\n        background-color: darkslateblue;\n        line-height: 95vh;\n        color: white;\n        font-weight: bold;\n    }\n\n    .side-header {\n        position: relative;\n    }\n\n    .side-content {\n        position: relative;\n        overflow: scroll;\n        height: 80%;\n    }\n\n    .picker {\n        cursor: crosshair;\n    }\n\n    .invisible {\n        display: none;\n    }\n\n    .visible {\n        display: block;\n    }\n\n    .palette {\n        position: absolute;\n        left: 0;\n        top: 50%;\n        transform: translate(0, -50%);\n        z-index: 10;\n    } \n</style>",
    "<script lang=\"ts\">import { Textarea } from '@smui/textfield';\nimport Button, { Label, Icon as ButtonIcon } from '@smui/button';\nimport { Link, LinkQuery, Literal } from '@perspect3vism/ad4m';\nimport Card, { Content, Actions, ActionButtons } from '@smui/card';\nimport hljs from 'highlight.js';\nexport let perspective;\nlet editorInput;\nlet existingZomes = [];\nasync function add() {\n    const literal = Literal.from(editorInput);\n    await perspective.add(new Link({\n        source: 'self',\n        predicate: 'ad4m://has_zome',\n        target: literal.toUrl()\n    }));\n    editorInput = '';\n}\nasync function update() {\n    let links = await perspective.get(new LinkQuery({\n        source: 'self',\n        predicate: 'ad4m://has_zome'\n    }));\n    let inactiveLinks = await perspective.get(new LinkQuery({\n        source: 'self',\n        predicate: 'ad4m://has_inactive_zome'\n    }));\n    existingZomes = [\n        ...links.map(link => {\n            return {\n                link,\n                code: Literal.fromUrl(link.data.target).get(),\n                active: true\n            };\n        }),\n        ...inactiveLinks.map(link => {\n            return {\n                link,\n                code: Literal.fromUrl(link.data.target).get(),\n                active: false\n            };\n        })\n    ];\n}\nfunction deleteZome(zome) {\n    perspective.remove(zome.link);\n}\nfunction makeInactiveZome(zome) {\n    perspective.remove(zome.link);\n    perspective.add(new Link(Object.assign(Object.assign({}, zome.link.data), { predicate: 'ad4m://has_inactive_zome' })));\n}\nfunction makeActiveZome(zome) {\n    perspective.remove(zome.link);\n    perspective.add(new Link(Object.assign(Object.assign({}, zome.link.data), { predicate: 'ad4m://has_zome' })));\n}\nperspective.addListener('link-added', update);\nperspective.addListener('link-removed', update);\nupdate();\n</script>\n\n{#each existingZomes as zome}\n<Card variant=\"outlined\">\n    <Content>\n        <div class=\"zome-code\" class:inactive={!zome.active}>\n            {@html hljs.highlight(zome.code, {language: 'prolog'}).value}\n        </div>\n    </Content>\n    <Actions>\n        <ActionButtons>\n            <Button variant=\"outlined\" on:click={()=>deleteZome(zome)}>\n                <ButtonIcon class=\"material-icons\">delete</ButtonIcon>\n                <Label>Delete</Label>\n            </Button>\n\n            {#if zome.active}\n                <Button variant=\"outlined\" on:click={()=>makeInactiveZome(zome)}>\n                    <ButtonIcon class=\"material-icons\">toggle_off</ButtonIcon>\n                    <Label>Deactivate</Label>\n                </Button>\n            {:else}\n                <Button variant=\"outlined\" on:click={()=>makeActiveZome(zome)}>\n                    <ButtonIcon class=\"material-icons\">toggle_on</ButtonIcon>\n                    <Label>Activate</Label>\n                </Button>\n            {/if}\n        </ActionButtons>\n    </Actions>\n</Card>\n\n\n{/each}\n\n\n<Textarea\n    class=\"shaped-outlined\"\n    bind:value={editorInput}\n    variant=\"outlined\"\n></Textarea>\n\n<Button on:click={add}>\n    <Label>Add</Label>\n</Button>\n\n<style>\n    .zome-code {\n        overflow: scroll;\n        white-space: pre;\n    }\n\n    .inactive {\n        opacity: 0.4;\n    } \n</style>",
    "<script lang=\"ts\">import { getContext } from \"svelte\";\nimport { Literal } from '@perspect3vism/ad4m';\nimport { perspectivesStore } from \"./PerspectivesStore\";\nimport { Network } from 'vis-network/esnext';\nimport { DataSet } from 'vis-data';\nimport md5 from 'md5';\nconst AGENT_PERSPECTIVE_NAME = '__agent_public_perspective';\nlet agentPerspective;\nlet neighbourhoods = [];\nlet privatePerspectives = [];\nlet container;\nlet nodes = [];\nlet nodesDataSet = new DataSet([]);\nlet nodePositions = {};\nlet scale = 1;\nlet network;\nconst ad4m = getContext('ad4mClient');\nlet perspectives = perspectivesStore(ad4m);\nperspectives.subscribe(update);\nasync function initAgentPerspective() {\n    const me = await ad4m.agent.me();\n    const allPerspectives = await ad4m.perspective.all();\n    agentPerspective = allPerspectives.find(p => p.name === AGENT_PERSPECTIVE_NAME);\n    if (!agentPerspective) {\n        agentPerspective = await ad4m.perspective.add(AGENT_PERSPECTIVE_NAME);\n        agentPerspective.loadSnapshot(me.perspective);\n    }\n}\nasync function initGraph() {\n    await createNetwork(container);\n    update($perspectives);\n}\ninitAgentPerspective();\n$: if (container)\n    initGraph();\nasync function update(newPerspectives) {\n    for (let p of newPerspectives) {\n        if (p.name != AGENT_PERSPECTIVE_NAME) {\n            if (p.sharedUrl) {\n                neighbourhoods = [...neighbourhoods, p];\n            }\n            else {\n                privatePerspectives = [...privatePerspectives, p];\n            }\n        }\n        else {\n            agentPerspective = p;\n        }\n    }\n    nodes = await createNodesFromPerspectives();\n    nodesDataSet.clear();\n    for (let node of nodes) {\n        try {\n            nodesDataSet.add(node);\n        }\n        catch (e) {\n        }\n    }\n}\nasync function createNodesFromPerspectives() {\n    let nodes = [];\n    if (agentPerspective) {\n        let email;\n        try {\n            let { did } = await ad4m.agent.me();\n            email = Literal.fromUrl(await agentPerspective.getSingleTarget({ source: did, predicate: 'foaf://mbox' })).get();\n        }\n        catch (e) {\n            console.debug(e);\n        }\n        console.log(\"got email: \", email);\n        let image;\n        if (email)\n            image = `http://www.gravatar.com/avatar/${md5(email)}?s=360`;\n        console.log(\"imgae:\", image);\n        nodes.push({\n            id: agentPerspective.uuid,\n            label: \"Agent Public Perspective\",\n            widthConstraint: 150,\n            shape: image ? 'image' : 'box',\n            x: 0,\n            y: 0,\n            image\n        });\n    }\n    let all = privatePerspectives.length;\n    let step = 150;\n    let left = all / 2 * -step;\n    for (let i = 0; i < all; i++) {\n        const p = privatePerspectives[i];\n        nodes.push({\n            id: p.uuid,\n            label: p.name,\n            widthConstraint: 150,\n            shape: 'image',\n            image: 'images/silvereyeflower.png',\n            x: left + (i * step),\n            y: 200\n        });\n    }\n    all = neighbourhoods.length;\n    step = 150;\n    left = all / 2 * -step;\n    for (let i = 0; i < all; i++) {\n        const p = neighbourhoods[i];\n        nodes.push({\n            id: p.uuid,\n            label: p.name,\n            widthConstraint: 150,\n            shape: 'image',\n            image: 'images/silvereyeflower.png',\n            x: left + (i * step),\n            y: -200\n        });\n    }\n    return nodes;\n}\nasync function createNetwork(container) {\n    network = new Network(container, { nodes: nodesDataSet, edges: [] }, {\n        nodes: {\n            borderWidth: 1,\n            shape: 'box',\n            color: 'teal',\n            font: {\n                color: '#ffffff'\n            }\n        },\n        edges: {\n            color: 'black',\n            arrows: {\n                to: {\n                    enabled: true,\n                }\n            },\n            arrowStrikethrough: false,\n            smooth: false,\n        },\n        physics: {\n            enabled: false\n        }\n    });\n    for (let event of ['dragging', 'stabilizationProgress', 'stabilized', 'resize', 'afterDrawing']) {\n        network.on(event, () => {\n            getNodePositions();\n        });\n    }\n    network.on('zoom', (params) => {\n        scale = params.scale;\n        getNodePositions();\n    });\n    network.on('oncontext', params => {\n        /*\n        if(params.nodes.length > 0) {\n            let url = params.nodes[0]\n            let pos = params.pointer.DOM\n            expressionContextMenu.open(pos.x, pos.y, url)\n        } else if(params.edges.length > 0) {\n            let edgeId = params.edges[0]\n            //@ts-ignore\n            let { from, to, label, link } = graph.edges.find(e=> e.id===edgeId)\n            console.log('oncontext link:', link)\n            let pos = params.pointer.DOM\n            if(link)\n                linkContextMenu.open(pos.x, pos.y, link)\n        }\n        */\n    });\n    network.on('click', params => {\n    });\n    getNodePositions();\n}\nfunction getNodePositions() {\n    nodePositions = {};\n    for (let node of nodes) {\n        try {\n            const graphPos = network.getPosition(node.id);\n            nodePositions[node.id] = network.canvasToDOM(graphPos);\n        }\n        catch (e) {\n            console.debug(\"Error in getNodePositions()\", e);\n        }\n    }\n}\nasync function createNewPerspective() {\n    let number = 1;\n    let prefix = \"New Perspective \";\n    while ($perspectives.includes(prefix + number)) {\n        number++;\n    }\n    const name = prefix + number;\n    const result = await ad4m.perspective.add(name);\n    console.log(\"Perspective added:\", result);\n}\n</script>\n\n<div class=\"perspectives\">\n    <div class=\"graph\" bind:this={container}>\n    </div>\n\n    {#each $perspectives as p}\n        <div class=\"perspective-icon-wrapper\" style={\n            `top: ${nodePositions[p.uuid]?.y-15-(30*scale)}px; \n            left: ${nodePositions[p.uuid]?.x-15+(50*scale)}px;\n            transform: scale(${scale*0.8});\n            `}>\n                {#if agentPerspective && p.uuid === agentPerspective.uuid}\n                    <div class=\"zoom-handle material-icons zoom-me\" data-to=\"PerspectiveWrapper\" \n                        data-uuid={p.uuid}\n                        data-settings=false\n                        data-agentprofile=true\n                    >fullscreen</div>\n                {:else}\n                    <div class=\"zoom-handle material-icons zoom-me\" data-to=\"PerspectiveWrapper\" \n                        data-uuid={p.uuid}\n                        data-settings=true\n                    >fullscreen</div>\n                {/if}\n        </div>\n    {/each}\n\n    <h2><div class=\"perspective-box plus-button\" on:click={()=>createNewPerspective()}>+</div></h2>\n</div>\n\n<style>\n    .perspectives {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    }\n\n    .graph {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    } \n\n    .perspective-icon-wrapper {\n        position: absolute;\n    }\n    \n    .zoom-handle {\n        font-size: 30px;\n        background-color: #00ffff73;\n    }\n\n    .perspective-box {\n        position: relative;\n        display: inline-block;\n        width: 200px;\n        height: 212px;\n        margin: auto;\n        border-radius: 100px;\n        background-color: #00ffff73;\n        text-align: center;\n        line-height: 212px;\n        background-image: url('../images/silvereyeflower.png');\n    }\n\n    .agent-perspective {\n        background-color: red;\n    }\n\n    .perspective-list {\n        display: inline-block;\n        list-style-type: none;\n        padding: 0;\n    }\n\n    .perspective-list-item {\n        display: inline-block;\n    }\n\n    .perspective-icon {\n        position: absolute;\n        left: 0;\n        width: 200px;\n    }\n\n    .perspective-name {\n        font-weight: bold;\n        position: absolute;\n        left: 0;\n        right: 0;\n        margin-left: auto;\n        margin-right: auto;\n        font-size: 20px;\n        text-shadow: 1px 2px #fafafa;\n    } \n\n    .private {\n        position: absolute;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        height: 33%;\n        background-color: seagreen;\n        overflow: scroll;\n    }\n\n    .plus-button {\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 50px;\n        height: 40px;\n        font-size: 30px;\n        line-height: normal;\n        cursor: pointer;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}