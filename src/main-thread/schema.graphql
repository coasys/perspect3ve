# import Expression, Link, LinkExpression from "../acai/acai.graphql"

input LinkQuery {
    source: String
    predicate: String
    target: String
}

input LinkInput {
    source: String
    predicate: String
    target: String
}

input AgentInput {
    did: String
}

input LinkExpressionInput {
    author: AgentInput
    timestamp: String
    data: LinkInput
}

type Query {
    hello: String
    links(perspectiveUUID: String, query: LinkQuery): [LinkExpression]
    expression(url: String): Expression
}

input UpdateLinkInput {
    perspectiveUUID: String
    oldLink: String
    newLink: String
}
type Mutation {
    addLink(perspectiveUUID: String, link: LinkInput): LinkExpression
    updateLink(input: UpdateLinkInput): LinkExpression
    removeLink(perspectiveUUID: String, oldLink: LinkExpressionInput): Boolean
}